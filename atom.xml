<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小胡不说八道</title>
  
  <subtitle>Go easy on the soul.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hu33.tech/"/>
  <updated>2019-04-08T04:02:21.255Z</updated>
  <id>http://hu33.tech/</id>
  
  <author>
    <name>不说八道的小胡</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《高性能JavaScript》- 算法和流程控制</title>
    <link href="http://hu33.tech/2019/04/08/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDJavaScript%E3%80%8B-%20%E7%AE%97%E6%B3%95%E5%92%8C%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B/"/>
    <id>http://hu33.tech/2019/04/08/《高性能JavaScript》- 算法和控制流程/</id>
    <published>2019-04-08T03:58:55.225Z</published>
    <updated>2019-04-08T04:02:21.255Z</updated>
    
    <content type="html"><![CDATA[<p>算法和数据结构对程序性能的重要性就不用说了，直接入正题~！这章主要从循环、条件语句和递归三个方面阐述优化点。</p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>JS提供了四种循环（ES5之前），<code>for</code>、<code>while</code>、<code>do-while</code>、<code>for-in</code>，其中只有<code>for-in</code>比其他几种明显要慢，其余三种性能都差不多，所以循环类型的选择应该是基于需求而不是性能。要考虑循环性能的话，得从每次迭代处理的事务和迭代的次数两个方面去考虑。</p><a id="more"></a><h4 id="优化点1-减少迭代的工作量"><a href="#优化点1-减少迭代的工作量" class="headerlink" title="优化点1  减少迭代的工作量"></a>优化点1  减少迭代的工作量</h4><p>灰常明显，如果一次循环迭代花的时间少了，那么多次循环花的时间就更少了，所以最好限制循环中耗时操作的数量：</p><ul><li><p>减少对象成员及数组项的查找次数，比如下例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i; i &lt; arr.length; i++) &#123;&#125;   <span class="comment">//每次循环都要查找一次arr.length</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i, len = arr.length; i &lt; len; i++) &#123;&#125;    <span class="comment">//整个迭代只需要查找一次arr.length</span></div></pre></td></tr></table></figure></li><li><p>颠倒数组的顺序，比如下例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i, len = arr.length; i &lt; len; i++) &#123;&#125;  <span class="comment">//这里的控制条件其实比较了两次，迭代数是否少于总数，它是否为true</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = arr.length; i--; ) &#123;&#125; <span class="comment">//将减法放到了控制条件中，每个控制条件只是简单地与0进行比较</span></div></pre></td></tr></table></figure></li></ul><h4 id="优化点2-减少迭代次数"><a href="#优化点2-减少迭代次数" class="headerlink" title="优化点2  减少迭代次数"></a>优化点2  减少迭代次数</h4><p>最广为人知的一个方式就是“达夫设备”了，它的基本理念是：每次循环最多可调用8次循环体，那么循环迭代次数就为总数除以8。当然，这个方式是当迭代次数很大的时候才看得到效果啦。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = arr.length % <span class="number">8</span>;</div><div class="line"><span class="keyword">while</span>(i) &#123;</div><div class="line">  process(arr[i--]);</div><div class="line">&#125;</div><div class="line">i = <span class="built_in">Math</span>.floor(arr.length / <span class="number">8</span>);</div><div class="line"><span class="keyword">while</span>(i) &#123;</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">  process(arr[i--]);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="优化点3-能用基于循环的迭代就不要用基于函数的迭代了"><a href="#优化点3-能用基于循环的迭代就不要用基于函数的迭代了" class="headerlink" title="优化点3  能用基于循环的迭代就不要用基于函数的迭代了"></a>优化点3  能用基于循环的迭代就不要用基于函数的迭代了</h4><p><code>forEach()</code>这种方法可以遍历数组所有成员，并在每个成员上执行一个函数，这个方法用起来是比较便利，但是它比较慢，毕竟每个数组项要调用外部方法，这是要产生开销的。</p><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p>条件语句主要有<code>if-else</code>和<code>switch</code>，通常来讲，<code>if-else</code>适用于判断两个离散值或几个不同的值域，<code>switch</code>适用于判断多于两个离散值的情况。从性能上讲，大多数情况下，<code>switch</code>是要比<code>if-else</code>快的，一个是因为很多语言对<code>switch</code>做了分支表索引的优化，另一方面是因为JS中<code>switch</code>语句比较值时使用全等进行判断，避免了类型转换时的损耗。</p><p><code>if-else</code>和<code>switch</code>性能比较请看<a href="https://www.2cto.com/os/201404/291376.html" target="_blank" rel="external">这里</a>~~反正我是没看懂 ╮(╯﹏╰）╭</p><h4 id="优化点4-优化if-else时，最小化到达正确分支前所需判断的条件数量"><a href="#优化点4-优化if-else时，最小化到达正确分支前所需判断的条件数量" class="headerlink" title="优化点4  优化if-else时，最小化到达正确分支前所需判断的条件数量"></a>优化点4  优化if-else时，最小化到达正确分支前所需判断的条件数量</h4><ul><li><p><code>if-else</code>中的条件语句应该总是按照从最大概率到最小概率的顺序排列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (value &lt; <span class="number">5</span>) &#123;</div><div class="line">  process();</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt; <span class="number">5</span> &amp;&amp; value &lt; <span class="number">10</span>) &#123;</div><div class="line">  process();</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  process();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>上面的代码只有在<code>value</code>值经常小于5时效率最高，如果<code>value</code>值大于10的概率最大，那么经常要经过两个条件判断才能到正确分支。</p></li><li><p>将<code>if-else</code>组织成一系列嵌套的<code>if-else</code>语句，比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (value === <span class="number">0</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result0;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">1</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result1;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">2</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result2;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">3</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result3;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">4</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result4;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">5</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result5;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">6</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result6;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">7</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result7;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">8</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result8;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">9</span>) &#123;</div><div class="line">  <span class="keyword">return</span> result9;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这个例子中，如果<code>value</code>值为10，那么得判断10次，假设<code>value</code>的值在0-10之间均匀分布，这就会增加平均运行时间。但是咱可以使用嵌套判断的方法，减少判断次数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (value &lt; <span class="number">6</span>) &#123;</div><div class="line">  <span class="keyword">if</span> (value &lt; <span class="number">3</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (value === <span class="number">0</span>) &#123;</div><div class="line">      <span class="keyword">return</span> result0;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value ===<span class="number">1</span>) &#123;</div><div class="line">      <span class="keyword">return</span> result1;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> result2;</div><div class="line">    &#125;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">if</span> (value === <span class="number">3</span>) &#123;</div><div class="line">      <span class="keyword">return</span> result3; </div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="number">4</span>) &#123;</div><div class="line">      <span class="keyword">return</span> result4; </div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> result5;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  <span class="keyword">if</span> (value &lt; <span class="number">8</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (value === <span class="number">6</span>) &#123;</div><div class="line">      <span class="keyword">return</span> result6;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> result7;</div><div class="line">    &#125;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">if</span> (value === <span class="number">8</span>) &#123;</div><div class="line">      <span class="keyword">return</span> result8;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> result9;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这个方法用了二分的思想，把值域分成了一系列的区间，然后逐步缩小范围。恩…确实是减少了平均运行时间，这个方法比较适用于有多个值域需要测试的情况，如果是离散值，那么<code>switch</code>比较合适，当然下面那种查找表的方式可能更合适~</p></li></ul><h4 id="优化点5-当有大量离散值需要测试时，可以使用数组和普通对象来构建查找表"><a href="#优化点5-当有大量离散值需要测试时，可以使用数组和普通对象来构建查找表" class="headerlink" title="优化点5  当有大量离散值需要测试时，可以使用数组和普通对象来构建查找表"></a>优化点5  当有大量离散值需要测试时，可以使用数组和普通对象来构建查找表</h4><p>当有大量离散值需要测试时，<code>if-else</code>和<code>switch</code>比使用查找表会慢很多，而且条件语句数量很大的时候，代码的可读性也会很差。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">switch</span> (value) &#123;</div><div class="line">  <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">    <span class="keyword">return</span> result0;</div><div class="line">  <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">    <span class="keyword">return</span> result1;</div><div class="line">  <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">    <span class="keyword">return</span> result2;</div><div class="line">  <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">    <span class="keyword">return</span> result3;</div><div class="line">  <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">    <span class="keyword">return</span> result4;</div><div class="line">  <span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">    <span class="keyword">return</span> result5;</div><div class="line">  <span class="keyword">case</span> <span class="number">6</span>:</div><div class="line">    <span class="keyword">return</span> result6;</div><div class="line">  <span class="keyword">case</span> <span class="number">7</span>:</div><div class="line">    <span class="keyword">return</span> result7;</div><div class="line">  <span class="keyword">case</span> <span class="number">8</span>:</div><div class="line">    <span class="keyword">return</span> result8;</div><div class="line">  <span class="keyword">case</span> <span class="number">9</span>:</div><div class="line">    <span class="keyword">return</span> result9;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>switch</code>这段代码所占的空间可能与它的重要性不成比例，这还只是10个离散数，如果有100个，那代码就有200行了，然而这200行代码既耗性能又占空间。用查找表改写后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> results = [result0, result1, result2, result3, result4, result5, result6, result7, result8, result9];</div><div class="line"><span class="keyword">return</span> results[value];</div></pre></td></tr></table></figure><p>查找表的一个主要的优点就是，不用书写任何条件判断语句，即使候选值数量增加，也几乎不会产生额外的性能开销。但是它比较适合于单个键和单个值之间存在逻辑映射，如果每个键都需要对应一个独特的动作或一系列动作，那还是<code>switch</code>比较适合。</p><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>使用递归可以把复杂的算法简单化，但是它存在潜在问题：终止条件不明确或缺少终止条件会导致函数长时间运行，使得用户界面处于假死状态；可能会遇到浏览器的“调用栈大小限制”。</p><h4 id="优化点6-将递归改用迭代实现可避免栈溢出错误"><a href="#优化点6-将递归改用迭代实现可避免栈溢出错误" class="headerlink" title="优化点6  将递归改用迭代实现可避免栈溢出错误"></a>优化点6  将递归改用迭代实现可避免栈溢出错误</h4><p>递归每调用一次，就需要在栈上开辟一块空间，当调用次数很大时，就可能超过浏览器栈最大调用栈。基本上能用递归实现的算法也能用迭代实现，虽然迭代很可能比递归慢，但它不会像递归一样手调用栈的影响。</p><p>比如我们要算<code>1+2+3+...+n</code>，用递归和用迭代代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//递归</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (n === <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> n + sum(n - <span class="number">1</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//迭代</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> sum = <span class="number">0</span>;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = n; i--; ) &#123;</div><div class="line">    sum += i;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> sum;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>它们的计算过程是这样子的：</p><ul><li><p>递归：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">sum(<span class="number">5</span>)</div><div class="line"><span class="number">5</span>+sum(<span class="number">4</span>)</div><div class="line"><span class="number">5</span>+<span class="number">4</span>+sum(<span class="number">3</span>)</div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">3</span>+sum(<span class="number">2</span>)</div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">3</span>+<span class="number">2</span>+sum(<span class="number">1</span>)</div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">3</span>+<span class="number">2</span>+<span class="number">1</span>+sum(<span class="number">0</span>)</div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">3</span>+<span class="number">2</span>+<span class="number">1</span>+<span class="number">0</span></div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">3</span>+<span class="number">2</span>+<span class="number">1</span></div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">3</span>+<span class="number">3</span></div><div class="line"><span class="number">5</span>+<span class="number">4</span>+<span class="number">6</span></div><div class="line"><span class="number">5</span>+<span class="number">10</span></div><div class="line"><span class="number">15</span></div></pre></td></tr></table></figure></li><li><p>迭代：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="number">0</span>+<span class="number">1</span>=<span class="number">1</span></div><div class="line"><span class="number">1</span>+<span class="number">2</span>=<span class="number">3</span></div><div class="line"><span class="number">3</span>+<span class="number">3</span>=<span class="number">6</span></div><div class="line"><span class="number">6</span>+<span class="number">4</span>=<span class="number">10</span></div><div class="line"><span class="number">10</span>+<span class="number">5</span>=<span class="number">15</span></div></pre></td></tr></table></figure></li></ul><h4 id="优化点7-使用Memoization减少递归操作的工作量"><a href="#优化点7-使用Memoization减少递归操作的工作量" class="headerlink" title="优化点7  使用Memoization减少递归操作的工作量"></a>优化点7  使用Memoization减少递归操作的工作量</h4><p>在进行递归操作的时候，通常会做很多重复工作，而Memoization的思想是缓存前一个计算结果供后续计算使用，这样就避免了重复工作。比如上面的<code>sum()</code>函数，考虑如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sum6 = sum(<span class="number">6</span>);</div><div class="line"><span class="keyword">var</span> sum5 = sum(<span class="number">5</span>);</div><div class="line"><span class="keyword">var</span> sum4 = sum(<span class="number">4</span>);</div></pre></td></tr></table></figure><p>这里面，<code>sum()</code>函数一共被调用了18次，而在计算<code>sum(6)</code>的时候就计算过<code>sum(5)</code>和<code>sum(4)</code>了，然而第二行代码<code>sum(5)</code>又计算了一次，相当于计算了2次，而<code>sum(4)</code>一共计算了3次。其实可以把已经计算好了的结果缓存起来，这样后面在计算的过程中可以不用重复计算了。用Memoization技术重写一下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">memSum</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span>(!memSum.cache) &#123;</div><div class="line">    memSum.cache = &#123;</div><div class="line">      <span class="string">"0"</span>: <span class="number">0</span>,</div><div class="line">    &#125;;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (!memSum.cache.hasOwnProperty(n)) &#123;</div><div class="line">    memSum.cache[n] = n + memSum(n - <span class="number">1</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> memSum.cache[n];</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>用<code>memSum</code>去算<code>memSum(6)</code>，<code>memSum(5)</code>，<code>memSum(4)</code>就只调用8次了，<code>memSum(5)</code>和<code>memSum(4)</code>没有发生递归运算，因为<code>memSum(6)</code>把要计算的都算完了，且把结果缓存下来了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法和数据结构对程序性能的重要性就不用说了，直接入正题~！这章主要从循环、条件语句和递归三个方面阐述优化点。&lt;/p&gt;
&lt;h3 id=&quot;循环&quot;&gt;&lt;a href=&quot;#循环&quot; class=&quot;headerlink&quot; title=&quot;循环&quot;&gt;&lt;/a&gt;循环&lt;/h3&gt;&lt;p&gt;JS提供了四种循环（ES5之前），&lt;code&gt;for&lt;/code&gt;、&lt;code&gt;while&lt;/code&gt;、&lt;code&gt;do-while&lt;/code&gt;、&lt;code&gt;for-in&lt;/code&gt;，其中只有&lt;code&gt;for-in&lt;/code&gt;比其他几种明显要慢，其余三种性能都差不多，所以循环类型的选择应该是基于需求而不是性能。要考虑循环性能的话，得从每次迭代处理的事务和迭代的次数两个方面去考虑。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="笔记" scheme="http://hu33.tech/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://hu33.tech/tags/JavaScript/"/>
    
      <category term="性能" scheme="http://hu33.tech/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>不用揉面擀面也能做的东北筋饼~</title>
    <link href="http://hu33.tech/2019/03/28/%E9%A5%BA%E5%AD%90%E7%9A%AE%E7%AD%8B%E9%A5%BC/"/>
    <id>http://hu33.tech/2019/03/28/饺子皮筋饼/</id>
    <published>2019-03-28T13:48:05.383Z</published>
    <updated>2019-03-29T10:32:27.993Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/成品.jpg" alt="饺子皮筋饼"></p><p>轻薄而筋道的东北筋饼，裹着经典的炒合菜和京酱肉丝，再配上几根黄瓜条，那味道真是爽歪歪~(ﾉ´▽｀)ﾉ♪</p><a id="more"></a><blockquote><p>在北京时同事带小胡去吃过一次姥姥家春饼，那顿午餐可把小胡撑得不行，回湘后一直怀念那裹着各种菜的薄饼，可惜在弗兰都没找到春饼店，那就只能自己动手啦！</p><p>作为一名弗兰菇凉，揉面擀面小胡还真不会，巴特，活人还能让泡尿给憋死吗？不会揉面还不会买现成的饺子皮吗哈哈哈哈！</p></blockquote><h3 id="筋饼做法"><a href="#筋饼做法" class="headerlink" title="筋饼做法"></a>筋饼做法</h3><p><strong><code>原料：</code></strong></p><p>饺子皮（8张）、食用油（少许）</p><p><strong><code>步骤：</code></strong></p><p><code>☛</code> 准备好饺子皮，每层都刷满油叠在一起</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/饺子皮.jpg" alt="饺子皮筋饼"></p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/刷油.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 用擀面杖将叠好的饺子皮擀薄，放入锅中蒸熟</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/擀薄.jpg" alt="饺子皮筋饼"></p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/蒸熟.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 蒸熟冷却后一层层撕开，筋饼就是酱紫啦，是不是薄如蝉翼却不失筋道哈哈哈</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/撕开.jpg" alt="饺子皮筋饼"></p><h3 id="炒合菜做法"><a href="#炒合菜做法" class="headerlink" title="炒合菜做法"></a>炒合菜做法</h3><p>炒合菜小胡以前都没听过，但它是北方经典菜肴，配着卷饼吃味道真是一绝！既然做了筋饼怎么能没有它呢~</p><p><strong><code>食材配料：</code></strong></p><p>鸡蛋（1个）、豆芽（1小把）、韭菜（1小把）、细红薯粉（1小把）、姜（少许）、大蒜（1瓣）、香葱（少许）、生抽（1小勺）、耗油（1小勺）、老抽（半小勺）、盐（少许）</p><p><strong><code>步骤：</code></strong></p><p><code>☛</code> 豆芽择好洗净，韭菜洗净切段，红薯粉开水泡开，鸡蛋打散，姜切末，蒜切片，香葱切小段</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/食材.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 锅内倒油烧热，下鸡蛋炒熟铲碎后盛出</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/炒蛋.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 锅内倒油烧热，下姜末蒜片爆香，下豆芽翻炒一小会儿</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/爆香.jpg" alt="饺子皮筋饼"></p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/放豆芽.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 下入泡好的粉条翻炒，加入1小勺生抽、1小勺耗油、半小勺老抽翻炒一会儿</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/放粉条.jpg" alt="饺子皮筋饼"></p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/放配料.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 下入炒好的鸡蛋碎和韭菜段，快速翻炒一会儿</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/放鸡蛋.jpg" alt="饺子皮筋饼"></p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/放韭菜.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 出锅前加入适量盐即可</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/炒合菜.jpg" alt="饺子皮筋饼"></p><h3 id="吃法"><a href="#吃法" class="headerlink" title="吃法"></a>吃法</h3><p><code>☛</code> 准备好想裹的菜，我准备的是炒合菜、京酱肉丝和黄瓜条</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/炒合菜.jpg" alt="饺子皮筋饼"></p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/摆盘.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 取一张筋饼，里面放上适量的菜</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/放菜.jpg" alt="饺子皮筋饼"></p><p><code>☛</code> 裹起来，开吃！</p><p><img src="https://hu33.github.io/images/生活/饺子皮筋饼/成品.jpg" alt="饺子皮筋饼"></p><h3 id="P-S"><a href="#P-S" class="headerlink" title="P.S."></a>P.S.</h3><ul><li>筋饼包着炒合菜、肉丝、黄瓜条吃真是绝配，喜欢吃大葱的也可以包大葱，反正想吃啥就包啥好了嘻嘻</li><li>我做的这份午餐是一人量，也就8张饺子皮哈哈哈哈哈，人多一起吃会方便点，毕竟一个人炒那么多菜既麻烦又吃不完不是~</li></ul><p>本食谱同步于公众号<code>小胡不说八道（eateateat33）</code>上，欢迎关注~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/生活/饺子皮筋饼/成品.jpg&quot; alt=&quot;饺子皮筋饼&quot;&gt;&lt;/p&gt;
&lt;p&gt;轻薄而筋道的东北筋饼，裹着经典的炒合菜和京酱肉丝，再配上几根黄瓜条，那味道真是爽歪歪~(ﾉ´▽｀)ﾉ♪&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://hu33.tech/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="食谱" scheme="http://hu33.tech/tags/%E9%A3%9F%E8%B0%B1/"/>
    
      <category term="一人食" scheme="http://hu33.tech/tags/%E4%B8%80%E4%BA%BA%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>零基础超简单的入门级烘焙食谱 - 菠萝酥</title>
    <link href="http://hu33.tech/2019/03/22/%E8%8F%A0%E8%90%9D%E9%85%A5/"/>
    <id>http://hu33.tech/2019/03/22/菠萝酥/</id>
    <published>2019-03-22T14:16:13.600Z</published>
    <updated>2019-03-22T14:31:14.387Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/生活/菠萝酥/封面.jpg" alt="菠萝酥"></p><blockquote><p>你以为这是徐福记凤梨酥那个“酥”吗？</p><p>NO！</p><p>这是鲍师傅榴莲酥那个“酥”哈哈哈哈~</p></blockquote><a id="more"></a><p><code>这个点心是小胡入了烤箱后第一次尝试的烘焙食物，不过当时做的是香蕉酥，果然是入门级零基础的烘焙食物，烘焙处女作成品就好看又好吃，这也奠基了小胡对烘焙的信心哈哈哈哈。</code></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>烤箱、烤盘、锡纸（油纸）、刷子、分蛋器</p><h3 id="食材"><a href="#食材" class="headerlink" title="食材"></a>食材</h3><p>蛋挞皮（6个）、菠萝（半个）、白糖（50g）、蛋黄（1个）、黑芝麻（少许）</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p><code>ღ</code> 蛋挞皮室温解冻，去掉外面的锡纸，用分蛋器分出一个蛋黄打碎备用（蛋清在这个食谱中木有啥用，我用来腌肉了哈哈哈）</p><p><code>ღ</code> 菠萝切成小小丁，稍微碎一点，但是不要碎成渣啦，和白糖一起倒入锅内翻炒，炒到粘稠呈透明状就差不多了，盛出备用</p><p><img src="https://hu33.github.io/images/生活/菠萝酥/菠萝丁.jpg" alt="菠萝酥"></p><p><img src="https://hu33.github.io/images/生活/菠萝酥/炒菠萝.jpg" alt="菠萝酥"></p><p><code>ღ</code> 烤盘上铺锡纸，薄薄地刷一层油，将菠萝馅放入蛋挞皮中，像捏饺子一样捏紧收口，然后放置于烤盘上</p><p><img src="https://hu33.github.io/images/生活/菠萝酥/放馅.jpg" alt="菠萝酥"></p><p><img src="https://hu33.github.io/images/生活/菠萝酥/收口.jpg" alt="菠萝酥"></p><p><code>ღ</code> 菠萝酥上刷一层蛋黄液，撒上少许黑芝麻</p><p><img src="https://hu33.github.io/images/生活/菠萝酥/刷蛋液.jpg" alt="菠萝酥"></p><p><img src="https://hu33.github.io/images/生活/菠萝酥/撒芝麻.jpg" alt="菠萝酥"></p><p><code>ღ</code> 烤箱预热上下火190℃5分钟，然后烤盘放入中层烤制15分钟，出炉后放凉就OK啦</p><p><img src="https://hu33.github.io/images/生活/菠萝酥/成品.jpg" alt="菠萝酥"></p><h3 id="P-S"><a href="#P-S" class="headerlink" title="P.S."></a>P.S.</h3><ul><li>每个烤箱的脾性不一样，所以温度和烤制时间可能会有偏差，不了解自己烤箱脾性的童鞋在烤制过程中要多关注下烤制程度，随时调整~</li><li>夹心可以换成你想爱吃的呀，紫薯、芒果、香蕉、红豆、榴莲都阔以（若是做香蕉酥就直接把香蕉捣碎放进蛋挞皮中就妥啦）</li></ul><p><code>嘻嘻嘻，刚出炉的菠萝酥真的是非常香了~这么简单又好吃的东西快试试吧~</code></p><p>本食谱同步于公众号<code>小胡不说八道（eateateat33）</code>上，欢迎关注~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/生活/菠萝酥/封面.jpg&quot; alt=&quot;菠萝酥&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你以为这是徐福记凤梨酥那个“酥”吗？&lt;/p&gt;
&lt;p&gt;NO！&lt;/p&gt;
&lt;p&gt;这是鲍师傅榴莲酥那个“酥”哈哈哈哈~&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://hu33.tech/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="食谱" scheme="http://hu33.tech/tags/%E9%A3%9F%E8%B0%B1/"/>
    
      <category term="烘焙" scheme="http://hu33.tech/tags/%E7%83%98%E7%84%99/"/>
    
  </entry>
  
  <entry>
    <title>清新爽口的五彩菠萝炒饭--食谱</title>
    <link href="http://hu33.tech/2019/03/21/%E8%8F%A0%E8%90%9D%E7%82%92%E9%A5%AD/"/>
    <id>http://hu33.tech/2019/03/21/菠萝炒饭/</id>
    <published>2019-03-21T10:52:38.836Z</published>
    <updated>2019-03-21T12:57:59.378Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/生活/菠萝炒饭/成品.jpg" alt="菠萝炒饭"></p><blockquote><p>昨日小胡出门溜达，一下子就被附近菜场10元5个菠萝的叫卖声吸引住了，一冲动就提了俩菠萝回家~(✿◡‿◡)</p><p>正好最近天热了，小胡的胃渴望一顿口味清新色彩丰富的午餐，于是就有了这份菠萝炒饭啦~♪(^∇^*)</p></blockquote><a id="more"></a><h3 id="食材"><a href="#食材" class="headerlink" title="食材"></a>食材</h3><p>米饭（1小碗）、鸡蛋（1个）、胡萝卜（半根）、火腿（半根）、豌豆（70g）、菠萝（半个）、小葱（少许）、食用油（少量）、盐（少许）</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p><code>☛</code> 胡萝卜洗净切丁，火腿切丁，菠萝切丁，豌豆洗净，鸡蛋打散，小葱切小段备用</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/食材.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 胡萝卜丁和豌豆先开水煮至七分熟，捞出沥水</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/焯胡萝卜.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 锅内倒少许油，中火将鸡蛋炒散，盛出备用</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/炒鸡蛋.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 锅内再倒少许油，煎炒火腿丁至表面微焦</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/炒火腿.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 倒入沥干水的胡萝卜丁和豌豆一块儿翻炒</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/放青豆.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 倒入炒好的鸡蛋碎继续翻炒</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/放胡萝卜.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 倒入米饭小火翻炒，炒至米饭分散后加入少许盐，倒入菠萝丁翻炒2分钟即可出锅</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/放米饭.jpg" alt="菠萝炒饭"></p><p><code>☛</code> 出锅的炒饭上撒上香葱就可以开吃啦~~~</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/成品.jpg" alt="菠萝炒饭"></p><p>再配上一碗甜甜的鸡汤，生活简直不要太美好哈哈哈哈~~</p><p><img src="https://hu33.github.io/images/生活/菠萝炒饭/配鸡汤.jpg" alt="菠萝炒饭"></p><h3 id="P-S"><a href="#P-S" class="headerlink" title="P.S."></a>P.S.</h3><ul><li>鸡蛋其实一个就可以了，我那个刚好是双黄蛋哈哈哈</li><li>胡萝卜丁和豌豆比较难熟，最好开水烫几分钟，嫌麻烦也可以后面多放点油炒熟，我不喜油，所以选择烫熟啦</li><li>炒米饭的时候小火慢慢打散，火太大容易炒过头，毕竟想吃完美点的午餐也要多点耐心不是~~</li><li>一定要注意火候，炒这个饭可不能急，大火很容易一不小心就糊了hhh，毕竟也不是重油爆炒的食物呀~~</li></ul><p>本食谱同步于公众号<code>小胡不说八道（eateateat33）</code>上，欢迎关注~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/生活/菠萝炒饭/成品.jpg&quot; alt=&quot;菠萝炒饭&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;昨日小胡出门溜达，一下子就被附近菜场10元5个菠萝的叫卖声吸引住了，一冲动就提了俩菠萝回家~(✿◡‿◡)&lt;/p&gt;
&lt;p&gt;正好最近天热了，小胡的胃渴望一顿口味清新色彩丰富的午餐，于是就有了这份菠萝炒饭啦~♪(^∇^*)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://hu33.tech/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="食谱" scheme="http://hu33.tech/tags/%E9%A3%9F%E8%B0%B1/"/>
    
      <category term="一人食" scheme="http://hu33.tech/tags/%E4%B8%80%E4%BA%BA%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>原味酥皮泡芙--食谱</title>
    <link href="http://hu33.tech/2019/03/20/%E5%8E%9F%E5%91%B3%E9%85%A5%E7%9A%AE%E6%B3%A1%E8%8A%99/"/>
    <id>http://hu33.tech/2019/03/20/原味酥皮泡芙/</id>
    <published>2019-03-20T13:56:14.397Z</published>
    <updated>2019-03-20T14:41:12.595Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/1.jpg" alt="原味酥皮泡芙"></p><blockquote><p>泡芙是小胡的最爱，但是外面的泡芙要么太甜太腻，要么不酥不脆，所以自己动手，丰衣足食~(#^.^#)</p><p>虽然我也是参照别人的教程做的，但是稍微有做调整，下面为大家献上排过雷填过坑后我最满意的配方~(<em>╹▽╹</em>)</p></blockquote><a id="more"></a><h3 id="食材"><a href="#食材" class="headerlink" title="食材"></a>食材</h3><p><em>酥皮泡芙的材料需要分成三个部分制作，分别为<code>酥皮</code>、<code>泡芙皮</code>、<code>夹心</code>。以下原料为20个小泡芙的用量。</em></p><p><strong><code>酥皮：</code></strong>黄油（40g）、糖粉（20g）、低筋面粉（50g）</p><p><strong><code>泡芙皮</code>：</strong>黄油（40g）、牛奶（80g）、白砂糖（3g）、低筋面粉（50g）、鸡蛋（2个）</p><p><strong><code>夹心：</code></strong>淡奶油（150g）、白砂糖（15g）</p><h3 id="制作步骤"><a href="#制作步骤" class="headerlink" title="制作步骤"></a>制作步骤</h3><p><em>制作步骤同样分为三个部分，首先准备好酥皮，然后制作泡芙皮，烤泡芙的时候准备奶油夹心。</em></p><p><strong><code>酥皮制作：</code></strong></p><ol><li><p>黄油室温软化，软化到用手指一压就能压下去的程度就好</p></li><li><p>加入糖粉和过筛的低粉，开始揉揉揉，揉成圆柱形，直径差不多跟挤在烤盘上的泡芙皮一样大就行</p><p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/2.jpg" alt="原味酥皮泡芙"></p></li><li><p>将揉好的圆柱柱仍冰箱里冷藏一下，为的是让其硬化，到时候好切成片，也不用太久了，不然到时候就切不动啦</p></li></ol><p><strong><code>泡芙皮制作：</code></strong></p><ol><li><p>将黄油、牛奶和白砂糖倒入奶锅加热，边加热边搅拌到沸腾</p></li><li><p>沸腾一分钟后开小火，倒入过筛的低粉并不停搅拌，这样可以让面粉充分吸收水分，然后就熟了哈哈哈，等充分搅拌到没有面粉粉了就关火，关火后再搅一搅，放凉</p><p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/3.jpg" alt="原味酥皮泡芙"></p></li><li><p>鸡蛋打成蛋液，等凉到不烫手时少量多次加入鸡蛋液，蛋液一定要慢慢加，加一点后充分混匀了再加</p></li><li><p>当搅到筷子提起来成倒三角就差不多了，就是提起来不会掉落，如果蛋液没用完也不要加了</p><p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/4.jpg" alt="原味酥皮泡芙"></p></li><li><p>将泡芙皮装入裱花袋</p></li></ol><p><strong><code>烤制过程：</code></strong></p><ol><li><p>烤箱200℃预热5分钟</p></li><li><p>装了泡芙皮的裱花袋剪一个小口子，然后将泡芙皮挤在铺了油纸的烤盘上，油纸上最好刷一层薄薄的油，到时候好脱模~挤的时候要垂直挤，下面要饱满点，烤的过程泡芙会变大，所以中间要留点空隙~（我挤着挤着就偏了，只能见缝插针地挤了哈哈哈）</p><p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/5.jpg" alt="原味酥皮泡芙"></p></li><li><p>取出酥皮，根据挤出来的泡芙个数决定切片厚度，我挤了20个泡芙，最后切了21片哈哈哈，将酥皮铺到泡芙上，放入烤箱</p><p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/6.jpg" alt="原味酥皮泡芙"></p></li><li><p>烤箱上下火180℃10分钟，这时候泡芙膨胀得差不多了，改为150℃25分钟，最后改成100℃10分钟，整个过程最好多看看烤制程度，好随时调整温度和时间</p></li></ol><p><strong><code>夹心制作：</code></strong></p><ol><li>我做的是纯奶油的，就将淡奶油和白砂糖倒入容器中用打蛋器打发，打到奶油硬挺就好了~</li><li>将打发好的奶油装入裱花袋</li></ol><p><strong><code>成品制作：</code></strong></p><p>烤好的泡芙冷却，底部戳个小洞洞，将奶油挤进去就好啦~~</p><p><img src="https://hu33.github.io/images/生活/原味酥皮泡芙/7.jpg" alt="原味酥皮泡芙"></p><h3 id="P-S"><a href="#P-S" class="headerlink" title="P.S."></a>P.S.</h3><ul><li>泡芙大小可以根据自己的口味调整，喜欢多奶油的就大一点，喜欢少奶油就小一点</li><li>白砂糖的量也可以自己稍微调整一下，我不喜欢太甜的，所以糖的用量不是很多</li><li>烤制过程中不要打开烤箱，不然容易导致泡芙坍塌</li></ul><p><code>嘻嘻，没事儿的话就试试吧~~</code></p><p>本食谱同步于公众号<code>小胡不说八道（eateateat33）</code>上，欢迎关注~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/生活/原味酥皮泡芙/1.jpg&quot; alt=&quot;原味酥皮泡芙&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;泡芙是小胡的最爱，但是外面的泡芙要么太甜太腻，要么不酥不脆，所以自己动手，丰衣足食~(#^.^#)&lt;/p&gt;
&lt;p&gt;虽然我也是参照别人的教程做的，但是稍微有做调整，下面为大家献上排过雷填过坑后我最满意的配方~(&lt;em&gt;╹▽╹&lt;/em&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://hu33.tech/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="食谱" scheme="http://hu33.tech/tags/%E9%A3%9F%E8%B0%B1/"/>
    
      <category term="烘焙" scheme="http://hu33.tech/tags/%E7%83%98%E7%84%99/"/>
    
  </entry>
  
  <entry>
    <title>挺好的</title>
    <link href="http://hu33.tech/2019/03/19/%E6%8C%BA%E5%A5%BD%E7%9A%84/"/>
    <id>http://hu33.tech/2019/03/19/挺好的/</id>
    <published>2019-03-19T03:42:43.355Z</published>
    <updated>2019-03-28T14:02:10.454Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/日记/挺好的.jpg" alt="挺好的"></p><blockquote><p>记于2019/3/19</p></blockquote><p>中午跟一个不太熟的朋友吃饭，整个过程我话很少，基本上处于一问一答且回答非常简短的状态。</p><p>吃到一半时，他问我，你现在是不是语言表达能力下降了？</p><a id="more"></a><p>我的语言表达能力下降了吗？好像是的，太久没有正常的社交，太久没有跟别人有正常的交流，独自生活了这么久，我好像不太会说话了，又好像是懒得说那么多话了。</p><p>我回他了一句：“嗯。”</p><p>之后觉得这种氛围好像有点尴尬，还是应该跟人家互动一下，只有内心OS却不跟别人交流这样不会形成恶性循环吗？然后我跟他讲了个冷笑话。</p><p><em><code>朋友们问我现在情况的时候，我通常只回答一句“挺好的”。但是这又显得太过敷衍，所以我后面会加一句“谢谢”，这样会显得比较真诚，然后对方还能回一句“不客气”，但是没有人回复过我“不客气”，好气哦。</code></em></p><p>这个笑话是真的冷，我都觉得自己被冷到了，他竟然笑了，他觉得很搞笑。</p><p>突然觉得内心有点小波澜，竟然有人能get到我这么冷的笑话。</p><p>​         </p><p>下午有体育课，像初中上体育课一样，自由活动前要集体跑800米。</p><p>我很有信心，因为初中每次跑800米我都是第一个，大学体测800米都是满分，又到了我展示自己的时候了。</p><p>田径场对面有个同学在召唤我，我小跑过去，却发现脚步沉重，50米的距离跑得我气喘吁吁。</p><p>我在想这是怎么回事？我的身体怎么突然变得这么弱了？我的运动技能怎么消失了？以前那个操场上英姿飒爽的女子哪儿去了？现在连50米都跑不了了，那接下来的800米我要怎么完成？</p><p>我顺手摸了摸自己的小短发，突然想起来，原来我生病了啊。</p><p>我算了算，从接受治疗到现在将近十个月了，十个月都没有运动，体力跟不上了啊，那还是得慢慢来，不着急。</p><p>然后我甩甩手，去跳起了广场舞。</p><p>​      </p><p>隔壁传来一阵阵尖锐的电钻声，没拉紧的窗帘透进刺眼的阳光，我翻了个身，艰难地睁开了眼。</p><p>原来是梦啊，原来是梦哦，我嘴角上扬了一下，挺好的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/日记/挺好的.jpg&quot; alt=&quot;挺好的&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记于2019/3/19&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;中午跟一个不太熟的朋友吃饭，整个过程我话很少，基本上处于一问一答且回答非常简短的状态。&lt;/p&gt;
&lt;p&gt;吃到一半时，他问我，你现在是不是语言表达能力下降了？&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日记" scheme="http://hu33.tech/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>div元素监听键盘事件</title>
    <link href="http://hu33.tech/2019/02/09/div%E5%85%83%E7%B4%A0%E7%9B%91%E5%90%AC%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
    <id>http://hu33.tech/2019/02/09/div元素监听键盘事件/</id>
    <published>2019-02-09T09:34:17.262Z</published>
    <updated>2019-02-09T09:42:43.649Z</updated>
    
    <content type="html"><![CDATA[<p>最近做表情联想时，踩了几个键盘监听事件的坑，总结一下~</p><h3 id="坑一：如何让div元素监听键盘"><a href="#坑一：如何让div元素监听键盘" class="headerlink" title="坑一：如何让div元素监听键盘"></a>坑一：如何让div元素监听键盘</h3><p>不知道你们试没试过，直接给<code>div</code>绑定如<code>keypress</code>、<code>keyup</code>、<code>keydown</code>这种键盘事件是不管用的，</p><p>要想让某个<code>div</code>元素监听键盘事件，首先得让它获得焦点吧？不然人家都没有玉玺，哪来的皇权？</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">div.focus();    <span class="comment">//div指的是那个想监听键盘事件的div~</span></div></pre></td></tr></table></figure><p>巴特，你以为<code>div</code>元素像<code>input</code>元素一样直接<code>focus</code>就能聚焦了？too young too naive~~像<code>form</code>中<code>input</code>、<code>button</code>、<code>textarea</code>这种可输入的元素和a这种链接元素是默认可获得焦点的，但是<code>span</code>、<code>div</code>这种元素可不行哇。因为他们缺少一个重要的属性：<code>tabindex</code>，给他们添加了<code>tabindex</code>属性后，就能指定他们可触焦了。</p><p>所以要想让<code>div</code>监听键盘事件，应该酱紫写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//需要给这个元素添加tabindex属性</span></div><div class="line">div.setAttribute(<span class="string">'tabindex'</span>, <span class="string">'0'</span>);</div><div class="line">div.focus();</div></pre></td></tr></table></figure><p>给它绑定键盘事件，在合适的时候让它获得焦点，然后就能监听到键盘事件啦~~</p><h4 id="关于tabindex"><a href="#关于tabindex" class="headerlink" title="关于tabindex"></a>关于tabindex</h4><p><code>tabindex</code>属性用于管理键盘焦点，决定元素能否被选中，且指定了按下tab键时元素被选中的顺序。</p><p>像<code>form</code>表单元素及链接元素是默认可获得焦点的，所以即使不显式地设置其<code>tabindex</code>，按下<code>tab</code>键时，也能获得焦点，直接触发<code>onfocus</code>事件，而<code>span</code>这种元素就不行了，哪怕你点击这个<code>span</code>也木有用。<a href="http://jsbin.com/husuxid/2/edit?html,output" target="_blank" rel="external">试一试~</a></p><p>如果想让<code>span</code>也能获取焦点，可以为这个<code>span</code>设置个<code>tabindex</code>，这样它也具有自动聚焦的能力啦~<a href="http://jsbin.com/husuxid/4/edit?html,output" target="_blank" rel="external">试一试~</a></p><p><code>tabindex</code>可以设置为0、负值、正值：</p><ul><li><code>tabindex=0</code>：表示在自然<code>tab</code>键顺序中插入一个元素，可以通过调用其<code>focus</code>方法聚焦该元素，也能通过tab键聚焦该元素。BTW，<code>tab</code>顺序就是你按tab键时元素获得焦点的顺序，默认就是在DOM中的位置顺序。</li><li><code>tabindex=负值</code>：表示在自然<code>tab</code>键顺序中移除该元素，哟呵，移除了就不能通过<code>tab</code>键使其聚焦啦，不过还是可以调用<code>focus</code>方法聚焦的啦。这里的负值基本上就是-1啦，虽然你想设-5，-6，-7也没问题，但是没意义哇，就好像数组的<code>indexof</code>，若无匹配就返回-1，也不返回-2对吧？<a href="http://jsbin.com/husuxid/5/edit?html,output" target="_blank" rel="external">试一试~</a></li><li><code>tabindex=正值</code>：显式地指定该元素在<code>tab</code>键顺序中的位置。其实<code>tabindex</code>就是<code>tab</code>+<code>index</code>嘛，<code>index</code>不就表示索引咯，咱对<code>index</code>的理解不就是越小越靠前嘛，<code>tabindex</code>也是哇(不包括0)。<a href="http://jsbin.com/kayaciz/1/edit?html,css,output" target="_blank" rel="external">试一试~</a></li></ul><p>关于<code>tabindex</code>更多使用场景，请移步<a href="https://developers.google.com/web/fundamentals/accessibility/focus/using-tabindex?hl=zh-cn" target="_blank" rel="external">这里</a>~</p><h3 id="坑二：Mac和win的快捷键不一致"><a href="#坑二：Mac和win的快捷键不一致" class="headerlink" title="坑二：Mac和win的快捷键不一致"></a>坑二：Mac和win的快捷键不一致</h3><p>在<code>Mac</code>中，<code>cmd+a</code>默认是全选的快捷键，在<code>Windows</code>中，全选的快捷键是<code>ctrl+a</code>。我想做的交互是，表情联想面板出现时，不管焦点是否在表情联想面板上，全选的时候都选中输入框中的内容，如下图所示：</p><p><img src="http://ow7p6xhhi.bkt.clouddn.com/div%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC2.gif" alt="div键盘事件监听2"></p><p>但是实际上，当<code>div</code>获取焦点后，<code>cmd+a</code>时是酱紫的：</p><p><img src="http://ow7p6xhhi.bkt.clouddn.com/div%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC1.png" alt="div键盘事件监听1"></p><p>诶？这不是我想要的效果哇，我应该要监听一下<code>cmd+a</code>的键盘事件，然后实现我想要的效果~但是<code>cmd+a</code>是<code>Mac</code>的全选快捷键，而在<code>Windows</code>上，对应的快捷键是<code>ctrl+a</code>，所以需要先判断一下操作系统，再重写对应的全选键盘事件。</p><p><code>window</code>的<code>navigator</code>对象中，有个<code>platform</code>字段，声明了运行浏览器的操作系统和（或）硬件平台，咱可以用它来判断当前浏览器运行在哪个操作系统中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> isWin = (navigator.platform == <span class="string">"Win32"</span>) || (navigator.platform == <span class="string">"Windows"</span>);</div><div class="line"><span class="keyword">var</span> isMac = (navigator.platform == <span class="string">"Mac68K"</span>) || (navigator.platform == <span class="string">"MacPPC"</span>) || (navigator.platform == <span class="string">"Macintosh"</span>) || (navigator.platform == <span class="string">"MacIntel"</span>);</div></pre></td></tr></table></figure><p>所以核心代码可以这样写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">switch</span> (<span class="literal">true</span>) &#123;</div><div class="line">    <span class="keyword">case</span> e.keyCode === KEY_A:    <span class="comment">//KEY_A = 65</span></div><div class="line">        <span class="keyword">if</span> ((isMac &amp;&amp; e.metaKey) || (isWin &amp;&amp; e.ctrlKey)) &#123;</div><div class="line">            <span class="comment">//your code</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>完整的keycode<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/keyCode" target="_blank" rel="external">在此</a>~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近做表情联想时，踩了几个键盘监听事件的坑，总结一下~&lt;/p&gt;
&lt;h3 id=&quot;坑一：如何让div元素监听键盘&quot;&gt;&lt;a href=&quot;#坑一：如何让div元素监听键盘&quot; class=&quot;headerlink&quot; title=&quot;坑一：如何让div元素监听键盘&quot;&gt;&lt;/a&gt;坑一：如何让div元素监听键盘&lt;/h3&gt;&lt;p&gt;不知道你们试没试过，直接给&lt;code&gt;div&lt;/code&gt;绑定如&lt;code&gt;keypress&lt;/code&gt;、&lt;code&gt;keyup&lt;/code&gt;、&lt;code&gt;keydown&lt;/code&gt;这种键盘事件是不管用的，&lt;/p&gt;
&lt;p&gt;要想让某个&lt;code&gt;div&lt;/code&gt;元素监听键盘事件，首先得让它获得焦点吧？不然人家都没有玉玺，哪来的皇权？&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="问题记录" scheme="http://hu33.tech/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSS制作半像素边框</title>
    <link href="http://hu33.tech/2019/02/09/CSS%E5%88%B6%E4%BD%9C%E5%8D%8A%E5%83%8F%E7%B4%A0%E8%BE%B9%E6%A1%86/"/>
    <id>http://hu33.tech/2019/02/09/CSS制作半像素边框/</id>
    <published>2019-02-09T09:22:05.400Z</published>
    <updated>2019-02-09T09:26:08.954Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>如果想给某个元素设置个<code>0.5px</code>的边框，你会怎么做？是直接设置<code>border-width</code>为0.5？</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">border-width</span>: 0<span class="selector-class">.5px</span>;</div></pre></td></tr></table></figure><p>可是这样浏览器真的能给你显示成<code>0.5px</code>的边框吗？哈哈哒，想多啦~</p><a id="more"></a><p><code>border-width</code>只能为自然数，其他类似的属性也是一样样的，小于<code>1px</code>的线浏览器都直接显示成<code>1px</code>（当然，<code>0px</code>就没有了哈）。<a href="http://jsbin.com/geqefik/edit?html,css,output" target="_blank" rel="external">效果</a></p><p>所以，常规方式是不行哒，但是咱可以用伪元素+缩放来巧妙地实现~~</p><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><p>大概思路就是用伪元素给该元素做个<code>1px</code>的框，这个框的大小是该元素的两倍，然后再缩小0.5倍，这样<code>0.5px</code>像素的框就出来啦~~具体步骤如下：</p><ol><li><p>给目标元素设个定位参考，然后伪元素才能根据这个定位进行绝对定位</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">span</span> &#123;</div><div class="line">  <span class="attribute">position</span>: relative;  <span class="comment">/* 只要不是默认值static就好了，原因我想你们应该知道 */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>给目标加个伪元素，并设置绝对定位</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">span</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>给伪元素加个<code>1px</code>的边框，并把高宽设为目标元素的两倍</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</div><div class="line"><span class="selector-tag">width</span>: 200%;</div><div class="line"><span class="selector-tag">height</span>: 200%;</div></pre></td></tr></table></figure></li><li><p>然后缩小0.5倍，缩到目标元素的大小</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">transform-origin</span>: 0 0;</div><div class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.5</span>);</div></pre></td></tr></table></figure></li></ol><p>然后就差不多啦~~</p><p>完整代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">span</span> &#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">span</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">200%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">200%</span>;</div><div class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(0.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>具体效果看<a href="http://jsbin.com/geqefik/edit?html,css,output" target="_blank" rel="external">这里</a>~~</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;如果想给某个元素设置个&lt;code&gt;0.5px&lt;/code&gt;的边框，你会怎么做？是直接设置&lt;code&gt;border-width&lt;/code&gt;为0.5？&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;border-width&lt;/span&gt;: 0&lt;span class=&quot;selector-class&quot;&gt;.5px&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可是这样浏览器真的能给你显示成&lt;code&gt;0.5px&lt;/code&gt;的边框吗？哈哈哒，想多啦~&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="问题记录" scheme="http://hu33.tech/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>我的组长在中科院</title>
    <link href="http://hu33.tech/2019/01/31/%E6%88%91%E7%9A%84%E7%BB%84%E9%95%BF%E5%9C%A8%E4%B8%AD%E7%A7%91%E9%99%A2/"/>
    <id>http://hu33.tech/2019/01/31/我的组长在中科院/</id>
    <published>2019-01-31T03:50:29.494Z</published>
    <updated>2019-01-31T04:15:49.951Z</updated>
    
    <content type="html"><![CDATA[<p>我经常跟别人说，我组长在中科院，带着骄傲的口吻。</p><a id="more"></a><h2 id="不愉快的初识"><a href="#不愉快的初识" class="headerlink" title="不愉快的初识"></a>不愉快的初识</h2><p><em>第一次跟这人打交道时，我真是打心底里觉得他讨厌。</em></p><p>大二上学期，一博拉了几个人组了个小团队参加第三届“数字中南”软创比赛。第一次开会地点定在创南二楼，那个灯光昏黄沙发老旧而且还是在走廊上的临时会议室，但那时候的我们热情洋溢啊，激情无限啊。就是在那个地方，我们第一次相识。</p><p>一博大概介绍了一下我们几个，几班的叫什么名字。他问我会PS吗，我说不太会。“那你得找个会PS的呀，找个什么都不会的来干嘛”，他冲一博说道。</p><p>我靠，这人怎么这么讨厌啊，不会可以学呀，我又不是不愿意学，说得好像你就什么都会了？当然这只是心理活动，没敢说出口。</p><p>“哎呀，不会很正常啊，现在边学边做还来得及，大家不都一开始啥都不会吗？”还是一博帮我圆的场。</p><p>就这样，我们这个参赛小组算成立了，之后就是各种开会讨论各种熬夜赶文档各种修修改改，将近一个月后的比赛上，算是取得了还可以的成绩，二等奖。但是跟组长并没有熟络起来，只是相互认识了。</p><h3 id="小片段1：你怎么都不理我"><a href="#小片段1：你怎么都不理我" class="headerlink" title="小片段1：你怎么都不理我"></a>小片段1：你怎么都不理我</h3><p>我走路容易发呆，然后会不自觉地低着头，所以经常看不到别人给我打招呼。</p><p>有次快期末，我去世纪楼复习。在教学楼走廊上，他迎面朝我走来，向我招手问好，但是我并没有看到。走近之后，他又朝我挥了挥手，我还是没有看到。当他从我身边走过，我隐约觉得刚刚旁边过了个人，但是也没有往后看。然后突然我的书包被人拍了一下，我往后一看，他站在我身后，问我怎么都不理他。</p><p>…….其实我真的只是没看到。</p><h2 id="互损的相识"><a href="#互损的相识" class="headerlink" title="互损的相识"></a>互损的相识</h2><p><em>跟组长真正熟起来还是因为软创。</em></p><p>我们院有个传统，大二下学期参加软创大赛，大三下学期参加服务外包大赛。而那一届的软创大赛正好由中南大学主办，由于有本场优势，大家组队报名格外积极。他们也是，大二上学期末，组长、一博、小易就已经商量好要一起组队，但是还缺一个做UI和前端的。他们仨一直在讨论找谁比较好，毕竟这个比赛对大家都很重要，都不愿意马虎随便。当时小易推荐了一个女生，组长推荐了我。</p><p>寒假在家时，组长来问我要不要一起参加软创比赛。我当然想都没想就同意加入啦。然后我们芒果团队就这样横空出世啦。后来听小易说，由于我们俩之前没有合作过，他还是比较倾向于他推荐的那个女生，但是组长动之以理劝服了他。这个理当然是上次合作比赛时我体现出的努力认真负责严谨啦，哈哈哈哈哈哈哈~</p><p>这个比赛战线拉得很长，从4月份的初赛到11月份的决赛，要历经大半年。也就是在半年内，我跟组长一下子熟络起来。</p><p>以前的我，在生人面前讲话跟蚊子一样，长得也算秀气，总给人一种很文静的感觉。但是熟起来之后，我就会比较放得开了，大声说话大声笑，表情丰富动作搞笑。但是如论如何，我都说不出脏话。尽管大一时，我整个寝室的妹子们都是三句话离不开脏字，我被熏陶了整整一年也没能说出“我去”这类的词。很神奇，我跟他们混了才两个月，就彻底爆发了，从此淑女文静这类的词就跟我不沾边了。</p><p>有次赶文档，我们四个人找了个有Wi-Fi的饭店，吃完饭后就开始分工工作。我当时的任务是负责P图，整个UI的设计图要做出来，放到文档中。小易在做PPT，时不时也需要我P几个图标。图片做到一半时大家又随时提修改意见，搞得我很混乱。突然，我一放鼠标，说了句妈蛋！说完后我看向他们，发现他们都以一种不可思议的眼神盯着我，可能是在想，刚刚那句“妈蛋”是从你嘴里出来的吗？从这以后，我就对脏话再也不忌口了，尤其是面对他们的时候。</p><p>虽然创意有受到来自于部分同学和老师的质疑，但是我们听取多方意见后还是决定坚持自己的想法。幸运的是，我们的选择没有错，一路上我们破关斩将，先后以优异成绩通过了院里选拔，校内选拔，进入国家级复赛。进入了复赛也就意味着我们的创意被认同了，接下来就是将创意实现的问题了。其实我们几个人，除了一博，其他三个对安卓都是一窍不通，只能硬着头皮边学边做了。由于时间紧迫，暑假我们只能回家休息一个星期，其余时间都必须呆在学校里做这个项目。</p><p>一般一博和小易在寝室学习，我和组长就呆在实验室。每隔几天开一次会，验收上次布置的开发任务，讨论过程中遇到的困难及解决方案。一开始我的任务是美工，主要是负责界面设计实现。尽管我到处上网搜别人的UI，参考那些美观好看的界面，自己做出来的总是那么入不了眼。尴尬的是，自己看久了，并不觉得丑，可能是看习惯了。但是拿给他们看的时候，从他们的表情中就能看出我设计的界面有多难看。一博和小易只是面露难色，组长就会直接骂人。</p><p>组长说话很直接，从来不拐弯抹角拖泥带水。很多东西，好就是好，不好就是不好，他不会碍于跟你是同学或者是朋友就不好意思说。因为界面的事，我都被他骂哭过两次。一次是在寝室没日没夜做了三天，把最后成果发给他看的时候，他回了我几句话，“怎么这么难看啊，让你做个界面都做不出来，你活着还有什么意义？”比起愤怒，我更多的是委屈难过。不是因为他说的话，而是我认认真真做的东西，别人不认可，自己也不认可。那种不认可，才让我从心底里觉得自己无能没用。还有一次，是我们几个开会的时候。那次其实大家心情都挺压抑的，因为为这个比赛这个项目投入了这么多，准备了这么久，却不知道到底能不能完成。具体就不说了，反正是我被组长讲哭了。之后他们经常拿这个事儿来调侃组长，说他把我骂哭，哈哈哈哈。</p><p>但是这个事情也并没有影响到大家的感情，反而是彼此之间更加近了。毕竟是希望你变得更好，才会对你提要求提意见啊。严格点要求高点反而才能让自己发现可以做得更好~所以之后在其它的界面设计与实现的过程中，很明显就得心应手多了。</p><p>因为我和组长平常都在实验室，所以吃饭之类的也都是一块儿。我逮着机会就黑他气他，为了报两次眼泪之仇。那时候是夏天，长沙特别热，太阳特别毒，只是中午出去吃个饭也能晒成煤球。组长那时候有点胖，他说他要瘦成一道闪电，我说可是你已黑成一片乌云。</p><p>到决赛的时候，大家都卯足了劲儿，力求各个细节都做到完美，连答辩结束的鞠躬我们都排练了好多次。决赛分两天，第一天是现场体验，各个院长们（评审专家）会到每个小组的展台体验项目成果。我们在空闲时间还到别的参赛小组的展台看了他们的成果，有让我们觉得很惊艳的，当然也有我们觉得比较low的，其实是说不出的感觉。但是好在我们几个都非常自信我们的东西是最棒的，至少心理上气势上不能输人，哈哈哈哈。第二天是正式答辩，封闭式的，在小易条理清楚激情澎湃的演讲和我们仨个人默契的演示后，我们看到了各位老师眼中透漏出的满意。一出了答辩室，我们就非常激动地跳了起来，不是因为我们觉得我们要得第一了，而是因为整个过程我们都没有出错，至少没有遗憾，这就够了。</p><p>下午公布结果的时候，我们四个和导师坐在大展厅的第二排，我们看到大屏幕上我们的分数遥遥领先与第二名时，看到评审老师们将大多数的票投给了“手绘心语”时，每个人都哭了，眼泪夺眶而出，彼此之间没有一句话也没有一个眼神，那半分钟内，大家只是盯着屏幕流眼泪。这是我们最骄傲的一刻，大半年来的努力得到了最好的回报。</p><p>那半年，是我最认真最专注地去做一件事的一段日子，可能对组长对一博对小易也都是这样。遇到困难时，我们一起想办法解决；受到质疑时，我们一同坚定选择；不管谁有了进步，大家都很开心地鼓励；时间空闲时，我们也会约好出去浪。我们的合作有过争吵，但是我们从来对事不对人，上一秒吵完，下一秒就能给对方抛一句，”走，吃饭去！”正是这个比赛，让原本不太熟悉的几个人，变得像亲人一样亲近。</p><h3 id="小片段2：R和L不分"><a href="#小片段2：R和L不分" class="headerlink" title="小片段2：R和L不分"></a>小片段2：R和L不分</h3><p>组长是河北人，他R和L不分。</p><p>我们确定了比赛创意后决定去长沙特殊教育学校调研，当时是4月的春天，穿的还不少。我们几个坐公交辗转到了学校附近的时候已是下午2点，那天特别热，温度高太阳毒，每个人都热得脸红扑扑的。</p><p>过了个地下通道后，我听到组长说了句，“好乐好乐。”</p><p>我一脸无语，“这有什么乐的，热都热死了。“</p><p>“对啊，我就是说好乐啊。”</p><p>”对啊，我就说有什么乐的呀。“</p><p>“难道你不觉得乐吗？”</p><p>“我就觉得热呀，虽然是挺激动，但是也不至于乐呀。”</p><p>他急了，说他R和L不分，他就是说的热！</p><p>哈哈哈哈哈，简直要把我们几个笑死了，只知道湖南人N和L不分，还不知道有R和L不分的。</p><p>就因为R和L不分，他被我们嘲笑过无数次，尤其是在说“肉”的时候，总是会说成“漏”。</p><p>他会说，我不吃猪“漏”。有次我教他，“r-ou-肉”。他学，“r-ou-漏”。哈哈哈，饭都差点喷出来了。</p><p>我问他，你能发出rose的音吗？奇怪的是，他rose这个单词说得还蛮好的。</p><p>“那肉就跟rose前面那个ro发音差不多，你试试。”</p><p>“ro—-se，r—-lou”，我勒个去。简直被气死，rose明明发的好好的，一意识到要说“肉”了就变成“漏”了。</p><p>我说他比较适合去学日语韩语，毕竟他们也是发不出r的音，哈哈哈。</p><h3 id="小片段3：我不吃猪肉"><a href="#小片段3：我不吃猪肉" class="headerlink" title="小片段3：我不吃猪肉"></a>小片段3：我不吃猪肉</h3><p>组长很奇怪的，他不吃猪肉。</p><p>我问他，你为什么不吃猪肉啊？你是回族人吗？还是有什么信仰？</p><p>“不是啊，我只是单纯地不吃猪肉，如果我知道这是猪肉的话就不想吃了。”</p><p>“那你要是不知道这是猪肉，你就会吃咯？”</p><p>“对啊，所以有时候家里做猪肉都不会告诉我这是猪肉，会说这是牛肉。”</p><p>“那你这就奇怪了，你又吃不出猪肉还嫌弃猪肉。”</p><p>但是这有一个好处，我可以欺负他，让他自愿把肉让给我吃，哈哈哈。</p><p>我们去吃米粉，他喜欢点排骨面，我喜欢点肉丝粉。等到他的餐上来了，我会告诉他，其实这个排骨上的肉是猪肉，名副其实的猪肉。一开始他会抗拒听我说，但是吃了一块之后就下不去口了，就只好排骨入我碗了，哈哈哈。藜爷经常说，这绝对是亲组员，这么坑组长的。</p><h3 id="小片段4：生日快乐"><a href="#小片段4：生日快乐" class="headerlink" title="小片段4：生日快乐"></a>小片段4：生日快乐</h3><p>暑假有一周的假期，刚好可以陪我们过个生日，而组长生日在我妈前一天。</p><p>“要不你去我家过生日吧，跟我妈一块儿过，可以尝尝我爸的厨艺。”</p><p>回家后听我妈说我爸去市里陪外公做手术了，这两天还回不来，我就没喊组长来我家玩了，可怕的是，在家太悠闲忘了他的生日。</p><p>那天下午他给我发了微信，说今天是他生日。我突然想起来，但是不好意思再说生日快乐，就回了句，我知道呀。</p><p>过了很久，他又给我发了消息。你们竟然都忘了我的生日，我等你们给我说生日快乐都等了一天了，你们是我最重要的朋友，但是竟然连我生日都忘了，知道还不给我说生日快乐。他的话语中带着气愤，带着责备，而更多的是失望。那一刻，我突然意识到，原来我们是特别好的朋友。</p><p>以前的我是个很慢热的人，也特别不愿意主动，很有自己的小世界，我的朋友们一般是比较有主动性的，因为如果她们不主动我可能就不会跟她们成好朋友了。那天我突然意识到，其实我们几个对彼此而言都是很重要的，彼此都在对方心里占据着不一般的地位，那种并肩作战的战友情，是一般同学比不上的。</p><p>我很羞愧，给组长发了个红包，并附上了迟到的“生日快乐”。但是过了一会儿，他把红包退了回来。他不是来讨红包讨礼物的，他只是希望能得到我们平等的重视。可是这个道理我后来才明白。</p><h2 id="知根知底的熟识"><a href="#知根知底的熟识" class="headerlink" title="知根知底的熟识"></a>知根知底的熟识</h2><p><em>如果说软创那段时光让我们成为了好朋友，那在英特尔实习那节经历则让我们成为了亲人。</em></p><p>软创拿了特等奖，我们几个都有去英特尔实习的机会。虽说是可以直接去实习，其实就相当于有个内推，进不进还是得像招实习生一样面试。一博大概3月份就过去了，他想早早去接触底层的内容。我跟组长是7月底到的上海，其实还没有确定能进英特尔，但是我俩就是这么义无反顾地各自从家里拖着行李箱踏上了去上海的火车。</p><p>到了上海的前几天，因为还没确定工作，不敢租房子，所以组长住一博那儿，我住酒店里。但是第一天，我们仨在一个特别不正宗的桑拿麻将房里睡了一夜，那绝对是我这辈子睡得最不安心的一觉。具体情况就不说了，但是那次之后我就发誓再也不睡这种地方了，整晚提心吊胆，简直没法睡觉。感动的是，他俩陪着我在那个破地方睡了一夜，这是唯一让我觉得安心的部分了。</p><p>在外面住了几天后，我们的工作确定下来了，可以开始租房子了。那几天，我们白天就在公司餐厅坐着，没那么炎热的时候就出去看房子，基本上都是组长在网上找房源并联系，我也就是跟着他去看看房子。最后很快就定下来住塘泾南苑了，他住9楼，我住6楼。事后闺蜜们说我真有勇气，一切都未知的情况下拖着箱子就走了。说实话，活那么大我都没有出过远门，虽然从小自立自强，但是多年来不是在家就是在学校，并没有独自在陌生城市生活的经历。更别说在毫无准备的情况下就只身跑上海租房实习。但是很幸运，有这几个小伙伴在身边，尤其是我那超级靠谱的组长，带领我找到工作确定住所过上了钱不多但滋润的小日子~</p><p>实习期间，我俩每天中午一块儿吃饭，下班一块儿回家，每天谈天说地，连对方七大姑八大姨家里的情况都了如指掌。</p><h3 id="小片段5：杭州游"><a href="#小片段5：杭州游" class="headerlink" title="小片段5：杭州游"></a>小片段5：杭州游</h3><p>9月初组里两个墨西哥同事过来出差，想去杭州游玩，组里同事周六都忙，所以带他们逛杭州的任务就光荣地交到我们身上了。</p><p>周六我们四点半就起床，收拾收拾就搭上去酒店的公交。我们要去酒店接那两位国际友人一块儿去高铁站，但是我们又没钱打车，只能赶早坐一个半小时的公交过去。</p><p>那是我们第一次进五星级酒店，服务员都非常礼貌，且都会说英语，我们心里暗暗想，连服务员英语都比我们好啊。</p><p>到了杭州后林璞学长担任了我们的导游。我们口语都不怎么样，我可能稍微好点，但是不太敢说，而林学长虽然英语口语不怎样，胆子却是很大，一路上跟两位国际友人聊得甚欢。只是讲的非常Chiglish，很多我都听不下去那两位友人竟然一直点头表示听懂了，我也是笑了一路啊~</p><p>在参观雷锋塔时，我用蹩脚的英语给他们大致讲了白蛇传的传说，第二天他们跟经理吃饭时说到法海，经理他们表示很惊讶，我们连法海都给他们讲了哈哈哈哈哈。</p><h3 id="小片段6：你怎么这么瘦成这个样子了"><a href="#小片段6：你怎么这么瘦成这个样子了" class="headerlink" title="小片段6：你怎么这么瘦成这个样子了"></a>小片段6：你怎么这么瘦成这个样子了</h3><p>组长到了上海后就开始减肥，每天跟着斗鱼健身直播做1小时的健身运动，每天的吃食也是减肥餐，在公司食堂吃饭时，吃的比我还少！</p><p>3个月后，我换了个手机，午后散步时，我拿着新手机到处拍，无意间将他拍进了画面。看到照片中的他，我突然发现，他怎么偷偷地瘦了这么多！由于我们每天都呆一块，他一点点掉肉我也没发现，待我发现时他已经减掉30斤肉肉了！</p><p>然后我跟了上去，惊叹一句：“你怎么瘦成这个样子了！”</p><p>8月刚到上海时还是个有小肚子的小胖子，突然就成了个有腹肌的小瘦子，3个月减30斤，也难怪那个健身主播邀请他去北京参加年会！</p><h3 id="小片段7：我都等了你一辈子了"><a href="#小片段7：我都等了你一辈子了" class="headerlink" title="小片段7：我都等了你一辈子了"></a>小片段7：我都等了你一辈子了</h3><p>下午吃午饭前，我们都会去上个厕所。</p><p>女生嘛，上厕所总会比男生慢很多，刚好那天人又挺多，让他等了好久。</p><p>我一出来，他就冲我说了句：“你怎么这么慢啊，我都等了你一辈子了！”</p><p>简直要笑死我了，不知道的还以为这是在求婚呢！</p><h3 id="小片段8：我要晕了"><a href="#小片段8：我要晕了" class="headerlink" title="小片段8：我要晕了"></a>小片段8：我要晕了</h3><p>某天上班时肚子不舒服，疼痛难忍。待舒服一些后，我拿上水杯去外面走廊接水。</p><p>刚接了水，就感觉视线模糊，耳鸣，浑身无力，我意识到自己可能是犯低血糖要晕了。然后我赶紧将水杯放在饮水机旁边的垃圾桶上，摇摇晃晃地进了实验室。 </p><p>进了实验室后，我拍了他一下，说了句“等会儿我晕了你帮我下去拿点糖”，然后就躺尸在椅子上了。</p><p>他还以为我在开玩笑，还问我是不是傻！</p><p>但是我后面真的晕了，醒来后组长给我拿来了水杯和糖，还表示你刚刚真的晕了啊，太可怕了！</p><p>哈哈哈哈哈，笑死我了，感觉把组长吓得不轻啊。</p><h2 id="各奔东西"><a href="#各奔东西" class="headerlink" title="各奔东西"></a>各奔东西</h2><p><em>大学毕业后，我去了浙大，组长去了中科院，我们各奔东西。</em></p><p>我们联系的不多，本身我就是不太爱与人联系的性格。偶尔联系也不会装模作样地嘘寒问暖而是直接切入正题，很久不联系也不会觉得生疏，依旧能扯天扯地。</p><p>研究生期间偶尔通个电话聊聊最近的生活和学习，组长会跟我聊最近正在追求的女孩，聊室友的奇葩女友，我会跟组长说追我的男孩，实验室的趣事。</p><p>刚实习时由于租完房子资金紧缺，二话不说就转账过来，还让我不急着还，生活还是要过好。由于刚到上海时我和组长都是租了房子就穷成狗，又倔强地不向家里求助，过了一个月苦日子。可能是怕我在杭州也像初到上海时那么两两算计着，所以会时不时在网上给我订零食，新鲜水果啥的，所以当时小日子还是挺富余的哈哈哈哈哈。</p><p>有天晚上组长给我打了个电话，那时我们已经很久很久没有通过电话了，只是偶尔微信联系。接到电话后就只听到听筒里传来的啜泣声，慢慢变成了嚎啕大哭，又渐渐平息。整个过程持续了好几分钟，我们一句话都没说，我不知道发生了什么，所以不敢乱说话。那几分钟内我想了好多种可能，能让一个男生哭得这么伤心怕不是家里出事了吧，我还在想如果真是这样我又要怎么安慰呢，毕竟我可能也帮不到什么。然后组长开始说话了，虽然吐字模糊且语无伦次，但我大概听出来并不是出了什么事。而是同学聚餐，组长喝了点酒，加上那段时间压力比较大，觉得周围的同学都那么牛逼，自己学起来有点吃力，又有点迷茫看不到未来的样子，所以很难受。可是组长啊，那可是中科院啊，能跟那些大牛们做同学本身就很牛逼了啊！</p><p>那一次我意识到，组长是真的很信任我吧，像亲人那样信任。</p><h3 id="小片段9：你就没有她聪明"><a href="#小片段9：你就没有她聪明" class="headerlink" title="小片段9：你就没有她聪明"></a>小片段9：你就没有她聪明</h3><p>英特尔的小宝哥知道组长打算去中科院，我打算去浙大的时候，就说了句：“<em>*</em>你真是没有33聪明啊！”</p><p>我们俩都一脸懵逼，没听懂啥意思。</p><p>小宝哥接着说：“浙江多么好的地方，好山好水又养人，人家去浙江待一年长寿两年，你去北京待一年折寿两年，划不来啊！”</p><p>哈哈哈哈哈哈哈，简直要笑死我了。</p><h2 id="讲不清的亲人关系"><a href="#讲不清的亲人关系" class="headerlink" title="讲不清的亲人关系"></a>讲不清的亲人关系</h2><p><em>在我心里，我组长就是我的亲人，但是既不像哥哥更不像弟弟，而是一种讲不清的亲人关系。</em></p><p>在杭州实习了半年后我就去了北京，开启了另一段实习生活。虽然我跟组长同在北京，但是基本上没见过几次面，一开始是因为我刚入职想尽管进入状态所以比较忙，组长约了我好几次我不是在加班就是有团建活动。而后生日时跟闺蜜去近郊玩去了，又放了组长一次鸽子。估计组长肯定很生气吧哈哈哈哈哈。</p><p>年前终于约成功了，吃完饭后我又扔下组长去找我室友浪去了。就是这一次之后，估计组长对我失望到不行了，然后咱俩就不怎么联系了。</p><p>再一次联系是差不多半年后，我生了重病住院治疗，组长看到了我在知乎上的回答，然后约上了一博和小易一起来探望我。刚好藜爷也说要回来看我，然后他们就天南地北地从各地赶回来在我狭小的病房里挤着，对了，还有蠢蠢的潇潇。组长从北京来，一博从上海来，潇潇从杭州来，小易和藜爷从深圳来，而我在长沙。</p><p>其实大家都很忙，找实习的，准备论文的，工作的，但是都抽出了宝贵的时间来探病，甚至还想瞒着我给我惊喜，小易还因为没赶上高铁挥泪买了张商务座，票价比回程的机票都贵，我听着都心疼钞票啊~</p><p>那天是我治疗期间最开心的一天之一，虽然我说不了话，但是听着他们侃天侃地相爱相杀也是很幸福的哈哈哈哈。</p><p>虽然我们几个日常联系不多，但是一定是关键时候会挺身而出两肋插刀的那种交情！</p><h3 id="小片段10：靶神"><a href="#小片段10：靶神" class="headerlink" title="小片段10：靶神"></a>小片段10：靶神</h3><p>探病那天，组长就是我们名副其实的靶神，谈到什么都能向他开一枪。</p><p>小易和一博一来，我就发现他俩胖了，一博甚至都有小肚子了，但是组长可是苗条的很，曾经三个人中最胖的他如今成了最瘦的。然后我们说，毕竟是没有女朋友的人，这么瘦有女朋友是撑不住的，哈哈哈哈哈开了一波车。</p><p>以前的组长不说白白净净，至少也不是黑煤炭，可是他跟一博小易站在一块儿真的是乌漆嘛黑的，小易就说这或许就说他单身的原因了哈哈哈哈又黑了一波。</p><p>我们聊到一个产品使用问题时，组长对一个特别弱智的问题表示不解，我说他果然是搞算法的，对产品一无所知哈哈哈哈哈。</p><h3 id="小片段11：组长脱单了"><a href="#小片段11：组长脱单了" class="headerlink" title="小片段11：组长脱单了"></a>小片段11：组长脱单了</h3><p>那一次的探病，倒是成就了一段姻缘。我家藜爷跟组长谈恋爱啦！</p><p>听到消息的我下巴都要惊掉了，怎么都没想到他俩成了，两个都是我很熟悉的人，毕竟大学期间，白天在实验室跟组长呆一块儿，晚上回寝室跟藜爷呆一块儿，他俩在一起这件事让我激动了好久大晚上还精神抖擞到不行呢！</p><p>知道消息的当天晚上，藜爷和组长就轮流来跟我语音，两个人都是略微羞涩又急于知道对方的一切。我很开心藜爷能找到自己喜欢的人，也很开心组长能拥有藜爷这么体贴懂事的女朋友。</p><p>只是，组长和藜爷的恋情没有维持太久，原因是不合适。</p><p>分手后他俩也是跟我说了大致情况，作为一个旁观者，我确实觉得这段感情两人都没错，不过合不合适确实是要相处过后才能知道。</p><p>我问过藜爷喜欢组长什么，藜爷说觉得他很厉害，这点我也承认，而且藜爷比较容易对厉害的男生有好感这我也是知道的。</p><p>之后组长跟我说，他不是藜爷喜欢的类型，藜爷喜欢成熟温柔厉害的，他只占了最后一条。</p><p>我当时就懵逼了，在我看来，组长确实不够成熟，更加不是温柔的类型，还凶哭过我呢，但是这两点藜爷未曾跟我谈起。只是一开始藜爷觉得组长是成熟温柔的，因为他们来探望我前，组长特意抽时间去了趟商场，直播逛街，给我买想要的小礼物，这让藜爷觉得组长是非常靠谱值得托付的。只是相处后，两个人都觉得对方不够懂自己，对对方的认知也有一定的偏差，这才彼此放开。</p><p>我最亲近的两位朋友，希望你们都能找到真正属于自己的幸福。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>其实这篇文章在两年前就开始写了，当时刚搭好博客，我承诺组长要写一篇关于他的文章。后面却因为各种事情（其实可能就是懒）中途搁置了，最近将博客重新修整起来，看到了这篇文章，决定要立马将它完成。毕竟我的组长就快要从中科院毕业了，至少要对得起文章的标题吧！</p><p>以后要是跟别人谈到我的组长，就不能骄傲地说我的组长在中科院了，而是要自豪地说，我的组长在微软！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我经常跟别人说，我组长在中科院，带着骄傲的口吻。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="人物" scheme="http://hu33.tech/tags/%E4%BA%BA%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>年少的模样</title>
    <link href="http://hu33.tech/2019/01/27/%E5%B9%B4%E5%B0%91%E7%9A%84%E6%A8%A1%E6%A0%B7/"/>
    <id>http://hu33.tech/2019/01/27/年少的模样/</id>
    <published>2019-01-27T06:47:02.499Z</published>
    <updated>2019-01-28T04:19:36.835Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/年少的邂逅/1.jpg" alt=""></p><p>某个寻常的周五，我照例乘4路公车去人民医院检查。公交路过一所中学，上来了一男一女两个学生，看相貌应该是这所中学的学生。</p><p>男生高高瘦瘦的，穿着休闲的运动装，一身少年气。</p><p>女生白白净净的，扎着活泼的马尾辫，充满灵气。</p><a id="more"></a><p>两人应该不认识，一前一后上了车。但是车上人稍微有点多，将两人挤到了一块，两人对视了一下后迅速地转移目光。随后女生在我身后找了个座位坐了下来，男生则站在下车门附近。</p><p>我不知道女生的状态，但我发现男生一直在东张西望不时地往我身后瞄一眼，瞄完后又匆忙地转换视角。过了几站后，车上大半的老人和小孩下了车，男生坐上了车中央的老弱病残孕专座。但他并没有乖乖地面向前坐着，而是面向下车门方向，状态和站着时差不多，只是感觉有点坐立不安，可能是想要引起女生的注意，又怕太过引人注目。</p><p>到了某站时，男生站了起来，应该是要下车了。车门打开的瞬间，他光明正大地望向了我身后的位置，有点期待有点羞涩，这一次他的目光没有闪躲。只是一秒后，他便迈开步子下了车。</p><p>我从窗户往外看，他正向车尾走去。我也不知道他脸上表现出来的是失落还是开心，但他扬着头，我仿佛看到了一丝骄傲。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/年少的邂逅/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;某个寻常的周五，我照例乘4路公车去人民医院检查。公交路过一所中学，上来了一男一女两个学生，看相貌应该是这所中学的学生。&lt;/p&gt;
&lt;p&gt;男生高高瘦瘦的，穿着休闲的运动装，一身少年气。&lt;/p&gt;
&lt;p&gt;女生白白净净的，扎着活泼的马尾辫，充满灵气。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日记" scheme="http://hu33.tech/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>飞羽作品集（下）</title>
    <link href="http://hu33.tech/2019/01/19/%E9%A3%9E%E7%BE%BD%E4%BD%9C%E5%93%81%E9%9B%86%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>http://hu33.tech/2019/01/19/飞羽作品集（下）/</id>
    <published>2019-01-19T08:56:52.816Z</published>
    <updated>2019-01-20T13:24:21.598Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本作品集为飞羽原创，18岁生日时飞羽将其作为礼物赠与本人，现将该作品摘抄并记录在该博客中。</p></blockquote><h2 id="（四十）《卖火柴的小女孩》"><a href="#（四十）《卖火柴的小女孩》" class="headerlink" title="（四十）《卖火柴的小女孩》"></a>（四十）《卖火柴的小女孩》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十）.jpg" alt="《卖火柴的小女孩》"></p><a id="more"></a><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>从前有个可怜的小女孩，父母很早就去世了，只留下她与年迈的奶奶相依为命，她每天只能靠卖火柴来维持生计。</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>日子一天天过去，有一天，出现了一个小男孩，手里拿着很多烟火，他是来放烟花的，恰巧，他没有火柴。</p><p>小男孩在小女孩附近绕了很久，小女孩似乎看出了小男孩的心思，就问他：“你是要买火柴吗？”小男孩不好意思地说：“嗯，不过我没带钱。”小女孩大方地说：“我送你一根火柴吧，但是要让看看你放的烟花。”小男孩的脸上绽放着笑容：“当然，你喜欢什么颜色的？”“彩色的。”小女孩毫不犹豫地回答，在她的家里似乎只要黑与白两种颜色，所以她特别渴望彩色。</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>小男孩拿了一根火柴跑到一块离小女孩不远的空旷地方，向小女孩挥了挥手示意要放烟花了，小女孩睁着大眼睛屏住呼吸等待着。</p><p>火柴点亮了，天空绽放出一朵彩色的云，“真是漂亮的烟花”，小女孩说着。她完全沉醉进去了–她感觉自己的手能触摸到那一片彩色的云了，好柔软，好温暖，还有一种轻飘飘的感觉。她甚至觉得自己都要跟云一起飘起来了，飘到天堂去跟她的爸爸妈妈打个招呼……</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十）2.jpg" alt="《卖火柴的小女孩》"></p><p>当小女孩睁开眼睛时，烟花早就消失了，她的嘴角还挂着一抹甜甜的微笑。</p><p>小男孩跑过来问她：“漂亮吗？我刚刚怎么见你闭上眼睛没看啊？”</p><p>小女孩笑着说：“我看到了啦，用心看到了，非常漂亮。”</p><p>顿了顿又说：“你明天还会来吗？”</p><p>小男孩想了想：“嗯，只要你想要我来我就来，不过是免费的火柴哦！”</p><p>“那当然。”</p><p>“那就一言为定了。”</p><p>约定明天再见面后，小男孩蹦蹦跳跳地回家了，小女孩目送着他离开，然后继续卖她的火柴……</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>冬天的序幕在不知不觉中揭开了，小女孩依旧穿着她那单薄的外套，打着赤脚，蜷成一团叫卖着火柴。每天最快乐的时光，便是等小男孩来了，看他放那灿烂的烟花。所以，即使生意再好，小女孩也总会留下一根火柴，这是只属于小男孩的非卖品。</p><p>小男孩今天来得很早，她怕女孩在雪里等得太久冻着了，他很同情小女孩的生活境遇，想着，等有一天自己赚钱了，一定要让这个女孩过上和自己一样好的日子。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十）3.jpg" alt="《卖火柴的小女孩》"></p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>小女孩的奶奶病了，这让小女孩面对更大的困境。她几乎已经没有办法支撑起这个家了，她也想过向小男孩家里求助，后来想了想，还是放弃了。</p><p>小男孩从小女孩的眼里看到了哀伤，哪怕她表面装得再快乐，也掩饰不了绚丽的烟花印在她眼中的黯淡。小男孩想每天陪她一起卖火柴，可是连跟她一起放烟花都是好不容易才求得父母的同意，一起卖火柴怎么可能让父母批准呢？</p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>小男孩想出了另外一个办法，把他每天带出来要放的烟花全都卖掉，把卖了的钱给小女孩。</p><p>小女孩的经济压力得到了减轻，可是，要想治好奶奶的病，这些钱是远远不够的。而且，她开始怀念从前看的烟花了，她的世界，仿佛回到了黑与白。此时的小男孩，也是一筹莫展。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十）4.jpg" alt="《卖火柴的小女孩》"></p><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>奶奶还是在一个风雪交加的夜晚去世了，小女孩趴在床边孤零零地哭着，没有小男孩的陪伴。</p><p>又过了一段更加艰难的日子，有一天，小女孩要小男孩别卖烟花了，她说她想看一次。</p><p>这一次，小女孩的眼里又重新出现了彩色。她努力不让自己去想自己还能看几次这样的烟花，小男孩也努力不让自己去想还能给小女孩几次这样的快乐。因为，现在的她实在太虚弱了。</p><p>现实的残酷让他们无法反抗。</p><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p>终于有一天，小男孩跑去小女孩卖火柴的地方，发现小女孩不在了。他等了很久，等到的只是父母把他带回家去吃饭。</p><p>一连几天，小男孩去的时候都没有看到小女孩。他开始用寻找代替等待，他总想着，她只是换地方了，也许马上就能找得到呢！</p><p>日子一天天过去，小男孩从来没有放弃过寻找，生活给他的结果是–蓦然回首，灯火阑珊处，空无一人。</p><p>……</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十）5.jpg" alt="《卖火柴的小女孩》"></p><h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p>象征着冬天的雪消融了，小男孩像往常一样走到小女孩卖火柴的地方。</p><p><strong>结局一：</strong></p><p>小男孩惊讶地发现地上有很多已经烧过了的火柴，仔细数了数，发现正好是和小女孩看过烟花的次数。原来，每次看完烟花后，小女孩都没扔掉点燃过的火柴，而是把它们埋在这雪里。</p><p>小男孩把这些燃过的火柴紧紧地攥在手里：“这是我们永不逝去的友情，不管你在哪儿，我都会想着你的。”</p><p>烟火绽放在夜幕之中，小男孩仿佛在天上看到了小女孩无暇的笑脸。</p><p><strong>结局二：</strong></p><p>一辆马车缓缓地停在小男孩的旁边，卖火柴的小女孩从上面走了下来。原来，是小女孩的一个亲戚找到了小女孩，把她带去养病了，小女孩那时还没来得及跟小男孩道别。</p><p>夜幕下，小男孩和小女孩微笑地坐在一起，看那永不逝去的烟花。</p><p><code>----------本篇完----------</code></p><h2 id="（四十一）《荼蘼》"><a href="#（四十一）《荼蘼》" class="headerlink" title="（四十一）《荼蘼》"></a>（四十一）《荼蘼》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十一）.jpg" alt="《荼蘼》"></p><p>第一声蝉鸣揭开了夏天的序幕，夏雨依旧毫不吝啬地浇灌着每一株在春天盛开的花，在一个不起眼的角落里，一株荼蘼依旧紧闭着，完全不像要开花的样子。</p><p>它问地上的小草：“小草小草，你说我怎么还不开花呢？”小草说：“快了吧，你别急，这不是还有一些花没开吗？”“也是”，荼蘼安慰着自己。</p><p>不知不觉夏天已经过去一半了，好多开过的花都已经谢了，荼蘼更加着急了，问不远处的昙花：“昙花姐姐，为什么我还不开花呢？”昙花想了想说：“也许你已经开了但是你不知道呢？像我就是在夜晚开花，你今晚别睡觉了，看看自己是不是在夜晚开的花。”垂头丧气的荼蘼一下子振奋起来了，盼望着夜幕的降临，心想着：“没错，我一定是在夜晚开花的，咯咯咯咯~~”</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十一）2.jpg" alt="《荼蘼》"></p><p>漫漫长夜随着天际的破晓而宣布离去，荼蘼熬了一夜，硬是没有看到自己开花。此时的荼蘼已经心灰意冷了，旁边的梅花树安慰她：“没事啦，荼蘼啊，你看我这梅花都要冬天才开呢！现在还是夏天，早得很哪，开花这事儿，急不得的。”</p><p>荼蘼想了想：“也是，我就不去想这事儿了，能开花就行。”不过其实它也很在意，它想要的是在这热情奔放的夏天盛开，而不是寒冷刺骨的冬天。</p><p>夏天马上就要过去了，荼蘼在夏天盛开的可能性也越来越小，它努力让自己不再去想这件事了……</p><p>夏的最后一天，荼蘼惊艳地绽放了。</p><p><code>----------本篇完----------</code></p><h2 id="（四十二）《白云和风》"><a href="#（四十二）《白云和风》" class="headerlink" title="（四十二）《白云和风》"></a>（四十二）《白云和风》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十二）.jpg" alt="《白云和风》"></p><p>湛蓝的天空下有一对很好的朋友，一个是白云，一个是风。除了白云，谁也不知道风在哪里。</p><p>可是有一天，白云变成了乌云，这下子风可不认识它了，到处找啊找啊，就是不见白云的踪影。</p><p>乌云只有靠风才能动，没有风，它就只能干巴巴地浮在空中等着。好不容易风飘到了它的面前，它大声喊着自己就是白云可是风完全不相信。风不屑地说：“我的朋友白云全身都是雪白的，看你这脏的样子，怎么可能是它呢？”</p><p>乌云发现自己的身体正在一点点地变湿润，它知道自己马上就要死了，要化成透明的雨到地上去了。一想到连道别都不能跟风说，它伤心地哭了起来。</p><p>风见乌云哭得那么伤心，觉得是有些不对劲，就去确认了一下乌云到底是不是就是白云。乌云边哭边诉说着它们过去一件件开心的事情，这会儿风真的相信乌云就是白云了。可还没来得及多说一句话，乌云已经全部化成了雨落了下去。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十二）2.jpg" alt="《白云和风》"></p><p>风后悔死了，心想怎么没早点问清楚，不然也不会出现这种状况了。</p><p>没有了云的风，带着颓废的心情以及看不见的躯体，像幽灵般漂浮在天上，想着：“白云以前在这里待过……”</p><p>又是一阵子过去了，突然有一天，天边出现了一朵白云……</p><p><code>----------本篇完----------</code></p><h2 id="（四十三）《心房》"><a href="#（四十三）《心房》" class="headerlink" title="（四十三）《心房》"></a>（四十三）《心房》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十三）.jpg" alt="《心房》"></p><p>我希望有这么一座房</p><p>透明的窗</p><p>享受阳光</p><p>我希望有这么一座房</p><p>充满想象</p><p>朝着梦想的方向</p><p>我希望有这么一座房</p><p>纯澈明亮</p><p>周围散发着花香</p><p>我希望有这么一座房</p><p>爬山虎在上面缠绕</p><p>与铁轨遥遥相望</p><p>我希望</p><p>某人有这样的心房</p><p><code>----------本篇完----------</code></p><h2 id="（四十四）《如果可以》"><a href="#（四十四）《如果可以》" class="headerlink" title="（四十四）《如果可以》"></a>（四十四）《如果可以》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十四）.jpg" alt="《如果可以》"></p><p>如果可以</p><p>我想做一阵风</p><p>自由地无形</p><p>直到遇见</p><p>让我有形的你</p><p>如果可以</p><p>我想做一片云</p><p>把所有的累都含在心里</p><p>等某一刻</p><p>肆意地洒落</p><p>如果可以</p><p>我想做一只蜗牛</p><p>与生活的节奏背道而驰</p><p>漫观世界的永无休止</p><p>如果可以</p><p>我想做一片树叶</p><p>在生命的最后一刻</p><p>舞动隐藏的翅膀</p><p>如蝶般纷飞而落</p><p>如果可以</p><p>我想做一株小草</p><p>违抗被践踏的命运</p><p>在坚硬的大地之上</p><p>生息不断</p><p>如果</p><p>我不是我</p><p>你亦菲你</p><p>命运</p><p>又会开一个</p><p>什么样的玩笑</p><p>让彼此聚散无常？</p><p><code>----------本篇完----------</code></p><h2 id="（四十五）《小老鼠吱吱》"><a href="#（四十五）《小老鼠吱吱》" class="headerlink" title="（四十五）《小老鼠吱吱》"></a>（四十五）《小老鼠吱吱》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十五）.jpg" alt="《小老鼠吱吱》"></p><p>在所有与老鼠有关的童话里，都有一只叫吱吱的老鼠，这只也不例外。</p><p>小老鼠吱吱天生就是大家讨厌的对象，可不是因为它有多讨厌，而是大家形成了一种固定思维–老鼠都是坏的。</p><p>可是小老鼠吱吱并不在意被大家讨厌，还是会在人家需要帮助的时候帮别人一把。</p><p>这一天，兔子家门口的锁坏了，怎么打也打不开。小老鼠吱吱就马上跑过去，用牙齿不停地磨门上的锁，把口里都磨出血了终于才磨开了锁。本以为兔子再也不会讨厌他了，结果兔子说的第一句话竟然是：“哎呀，这锁还不够结实，看样子得换把好一点的锁来防着点。”</p><p>又有一天，小狗在玩一个跳跳球，一不小心把球给掉到蛇洞里去了。在谁都没辙的时候，吱吱冒着生命危险去蛇洞里面把球推了出来，小狗没说一句谢谢，还怪球被弄脏了，又自个儿玩去了。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十五）2.jpg" alt="《小老鼠吱吱》"></p><p>不久后，小鸡妈妈发现窝里的蛋少了一个，便在吱吱门前大吵大嚷地喊着：“偷蛋贼！”吱吱在家里那叫一个委屈啊：“虽说老鼠爱偷鸡蛋，可我从来没有做过这样的事啊。”为了澄清自己，吱吱整日整夜地去找那只丢了的蛋，终于在一个草丛里发现了它。于是吱吱高兴地把鸡蛋带回去给鸡妈妈。鸡妈妈捧着宝贝蛋说：“乖乖，还好你没事，不然妈妈可怎么活啊。”顿了顿又瞟了一眼吱吱：“算你还有良心，把蛋还回来了。”此时吱吱已经累得不行了，也不想再解释什么，拖着疲惫的身子回洞里去了。</p><p>……</p><p>就这样，在大伙的偏见与误解中，吱吱实在受不了了。开始和自己的同类一起做坏事，学会去偷别人的吃的，咬坏别人家的东西……</p><p>又过了一段时间，一次吱吱和几个同伴聚会，喝酒喝多了便开始抱怨起来：“那些个动物算什么，我原本对它们那么好，它们凭什么那样对我，哼，现在算是把仇都报了。”</p><p>另外一只老鼠笑嘻嘻地说：“当初要不是我们暗中使坏把你拉到我们这边来，你的日子也不会像现在这么潇洒啊。”</p><p>“暗中使坏？”吱吱好气地问了句。</p><p>“对啊，锁是我们弄坏的，洞是我们挖的，蛋也是我们偷的……我们可都是为了你好，不然你怎么会到我们这边来呢？”</p><p>吱吱一下子清醒了，酒也没喝，走了。</p><p>第二天清早，吱吱就收拾好行李，独自离开了。他要去找一个地方，没有偏见，也没有陷害，只有纯澈的真诚。</p><p><code>----------本篇完----------</code></p><h2 id="（四十六）《飞蛾与螳螂》"><a href="#（四十六）《飞蛾与螳螂》" class="headerlink" title="（四十六）《飞蛾与螳螂》"></a>（四十六）《飞蛾与螳螂》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十六）.jpg" alt="《飞蛾与螳螂》"></p><p>###1</p><p>在一个不起眼的角落里，一只飞蛾刚刚睡醒，不过还没来得及清醒它就被吓呆了，因为就在前面不远处一只螳螂正盯着它看。正巧的是，螳螂正一步一步向它走来飞蛾的恐惧已经完全占据了它的理智，它知道自己马上就要死于螳螂的刀下了。</p><p>“唰！”一眨眼的工夫，刀起刀落，地上多了一具黄蜂的尸体，原来刚才黄蜂正在飞蛾后面，这才是螳螂想要捕食的对象。</p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2"></a>2</h3><p>飞蛾悬着的心还没来得及放下来，看螳螂吃黄蜂的样子又害怕得一动也不敢动了。</p><p>螳螂吃饱后瞟了它一眼：“放心，我现在对你还没兴趣。”</p><p>飞蛾刚叹了口气，螳螂又说：“等你长大一点再吃也不迟。”</p><p>飞蛾真的几乎崩溃了，不过又马上镇定了下来：“等我长大了我就去扑火，到时候你就吃不到我了。”飞蛾这话的时候连自己都觉得奇怪，这不是摆明让螳螂吃掉自己吗？</p><p>可这时螳螂突然来了兴趣：“对了，你们为什么要去扑火啊？那不是自取灭亡吗？”</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十六）2.jpg" alt="《飞蛾与螳螂》"></p><p>飞蛾清了清嗓子，摆出一副教授的样子说道：“这你们就不懂了，其实除了凤凰可以涅槃，我们飞蛾也可以，但这个概率很小，只有九万九千九百九十九分之一，所以一般的飞蛾都死了，不过如果涅槃成功了的，我就会变成一种比蝴蝶还漂亮的动物，而且还会使法术。”</p><p>螳螂瞪大了眼睛，这种事还是头一回听说，真想见识见识。</p><h3 id="3-1"><a href="#3-1" class="headerlink" title="3"></a>3</h3><p>为了能见识飞蛾的涅槃，螳螂开始和飞蛾在一起了，不过这可不是飞蛾想要的，有个杀手在身边可是一件很毛骨悚然的事。飞蛾也想过逃跑，不过一旦被发现的话，它也会像最开始那只黄蜂那样被整个吃掉的。于是，它不再想逃跑的事了。</p><p>“小羽，我出去觅食了，你就呆在这好好练习一下你的翅膀吧。”螳螂开始称呼飞蛾的名字了，因为至少它现在没把这只飞蛾当猎物看待。</p><p>“好的，刀刀。”小羽也直呼螳螂的名字，连它自己也觉得很不可思议，它居然会跟一只螳螂混在一起。</p><h3 id="4-1"><a href="#4-1" class="headerlink" title="4"></a>4</h3><p>日子一天天过去了，小羽也慢慢长大了，这天螳螂刀刀又开始问：“小羽，还要多久你才能涅槃啊？”小羽一时不知怎么回答了，因为和它差不多大的飞蛾都已经去尝试这项伟大的事业了，当然，结果只是死亡。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十六）3.jpg" alt="《飞蛾与螳螂》"></p><p>小羽知道，现在它只有两个选择，要么扑火，要么被刀刀吃掉。终于，它下定决心了：“就今晚吧！”</p><p>刀刀一脸的喜悦，虽然不一定能看到小羽涅槃成功，但一想到那个情景就觉得异常兴奋。</p><h3 id="5-1"><a href="#5-1" class="headerlink" title="5"></a>5</h3><p>夜无声地降临了，在一盏油灯面前，小羽和刀刀正呆呆地站着，火苗不停地窜动，两个生命在它的面前显得太渺小了。</p><p>“开始吧。”刀刀的声音打破了夜的寂静。</p><p>小羽擦了擦汗，鼓起勇气向火苗扑去，头用力地往下低着，紧闭着眼睛，凭感觉去不断撞击火焰。一下，两下，三下……连一旁的刀刀都看得非常紧张。</p><p>火苗还在窜动着，小羽不知疲惫地不停扑着火，它知道哪怕有一秒钟的停顿，它的身体就会被无情的火焰吞食，它只有用完最后一丝体力，才有希望得意涅槃。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十六）4.jpg" alt="《飞蛾与螳螂》"></p><h3 id="6-1"><a href="#6-1" class="headerlink" title="6"></a>6</h3><p>小羽马上就要支撑不住了，它使出了最后力气扑向火焰，希望能在碰到火焰的那一瞬间能有奇迹发生。可以，在它身体穿过火焰的那一瞬，它知道奇迹没有发生，它再也没有力气去扑火了，倒在了地上，等待着死亡的降临。</p><p>当然，刀刀并没有杀它，其实刀刀早就把小羽当成了朋友，它是真的希望小羽能够涅槃成功，尽管现在失败了，它也要带着小羽回去。</p><p>正当刀刀走近小羽时，奇迹发生了，刚刚被小羽不断扑打的火焰熄灭了，小羽的背上长出了一双蓝色的翅膀，此时的刀刀兴奋极了，大声喊着：”小羽，你成功了，你成功了，快醒醒啊！“</p><p>小羽用力睁开了眼睛，看了看自己，满足地笑了，又睡了过去。</p><h3 id="7-1"><a href="#7-1" class="headerlink" title="7"></a>7</h3><p>第二天一大早，小羽就醒来了，它躺在原来和刀刀一起居住的房子里，不过它还不知道怎么使用法术呢，只是呆呆地看着自己那一对美丽的翅膀。</p><p>它隐隐约约听到一个声音对自己说：“来吧，飞越过高山，又飞羽过海洋，来到我们这个梦的世界吧！你的翅膀会带你飞到这里来的。”</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十六）5.jpg" alt="《飞蛾与螳螂》"></p><p>小羽兴奋地跟刀刀说听见声音呼唤它到梦的世界去了，刀刀听了也替它高兴，不过一想到还没见到小羽使的法术就要离开了又觉得很不舍。</p><p>小羽看出了刀刀的心思，对它说：“我们一起去吧，反正你也会飞。”</p><p>刀刀灿烂的笑了。</p><h3 id="8-1"><a href="#8-1" class="headerlink" title="8"></a>8</h3><p>小羽和刀刀就这样出发了，在那双奇妙的翅膀的带领下，不久，它们就飞越过了高山，可是在飞越海洋的途中，刀刀显得体力不支了，而小羽，因为那双翅膀的作用还毫无感觉。</p><p>刀刀对小羽说：“小羽，我好像不行了，不能陪你到海洋那边梦的世界去了，你去了之后多学点法术，还有，别忘了有我这么一个朋友哦。”</p><p>小羽说：“这怎么行呢，你到我背上来，我背你一起去。”话刚说完，小羽就背起了刀刀继续向前飞去。</p><h3 id="9-1"><a href="#9-1" class="headerlink" title="9"></a>9</h3><p>翅膀的力量只足够让小羽一个人飞到梦的世界去，背上刀刀后，小羽很快也没力气了，眼看着它们都要掉到海面上去了，刀刀从小羽背上一跃，掉了下去，只留给小羽一个微笑。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十六）6.jpg" alt="《飞蛾与螳螂》"></p><p>小羽愣了一下，飞快地朝刀刀掉落的地方冲去，用比当初扑火时更大的力气，冲进了海里，它压根就没想过结果会是怎样，它只要找到刀刀。</p><p>被小羽冲起浪花的那一层海面，很快就平静了下来，刀刀和小羽都失去了知觉，沉到了海底。</p><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>当小羽醒来时，它已经到梦的世界了，此时刀刀正在它的旁边，还熟睡着呢。这是又出现当初呼唤小羽来的那个声音，告诉它现在它真的涅槃了。</p><p>原来，飞蛾的涅槃不仅需要火的炼造，还需要水的洗礼，而现在，小羽成了真正意义上一只涅槃过的飞蛾了。</p><p>从此，小羽和刀刀就生活在了这个梦的世界，开始学习法术的生活。也许不久之后，它们就会通过法术回到原来的世界，做出一些奇妙的事情呢。</p><p><code>----------本篇完----------</code></p><h2 id="（四十七）《卖梦的商店》"><a href="#（四十七）《卖梦的商店》" class="headerlink" title="（四十七）《卖梦的商店》"></a>（四十七）《卖梦的商店》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四十七）.jpg" alt="《卖梦的商店》"></p><p>“天使”经营了一家商店，专门卖梦给需要的顾客。</p><p>第一个来买梦的是小狗，它要的梦很简单，只是能在梦里有骨头吃。因为是刚开张，所以“天使”免费送给它一个梦，其实也就是一颗丸子，夜晚睡前吃掉就可以做许下愿望的梦了。</p><p>第二个来的顾客是一只蝴蝶，它的梦也很简单，只想梦里能有一片无尽的花丛任它飞舞，自然，它也拿到了一颗丸子。</p><p>第三个顾客是一只乌鸦，它想要在梦里拥有一身洁白的羽毛，在付了钱之后，它也得到了一颗丸子，高高兴兴地走了。</p><p>夕阳散尽了最后一丝余晖，夜与梦同时降临。</p><p>在小狗的梦里，它的前脚只剩下白色的骨头，惨不忍睹，小狗看着自己的骨头，吓了醒来。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（四十七）2.jpg" alt="《卖梦的商店》"></p><p>蝴蝶在梦里看到了一片无穷无尽的花，准确地说，是食人花，蝴蝶只能用力地挥着翅膀在花的上方挣扎，无穷无尽，永远飞不出去。</p><p>乌鸦更惨，本以为洁白的羽毛会令同类羡慕不已，结果同伴都视其为异类，飞到哪儿都遭受驱赶……</p><p>第二天一大早，买了梦的动物们纷纷到卖梦天使店找“天使”理论，结果昨天那个天使模样的店主已经不见了，取而代之的是面目狰狞的魔鬼。动物们这才恍然大悟，原来买的是魔鬼的梦，只能愤然离去。</p><p>其实动物们不知道，天使与魔鬼经营着同一家店，你若内心澄澈，不带一丝贪恋，梦自然是美好的。否则，噩梦则永远不会消失。</p><p><code>----------本篇完----------</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本作品集为飞羽原创，18岁生日时飞羽将其作为礼物赠与本人，现将该作品摘抄并记录在该博客中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;（四十）《卖火柴的小女孩》&quot;&gt;&lt;a href=&quot;#（四十）《卖火柴的小女孩》&quot; class=&quot;headerlink&quot; title=&quot;（四十）《卖火柴的小女孩》&quot;&gt;&lt;/a&gt;（四十）《卖火柴的小女孩》&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/飞羽作品集/（四十）.jpg&quot; alt=&quot;《卖火柴的小女孩》&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="作品集" scheme="http://hu33.tech/tags/%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    
      <category term="礼物" scheme="http://hu33.tech/tags/%E7%A4%BC%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>飞羽作品集（中）</title>
    <link href="http://hu33.tech/2019/01/18/%E9%A3%9E%E7%BE%BD%E4%BD%9C%E5%93%81%E9%9B%86%EF%BC%88%E4%B8%AD%EF%BC%89/"/>
    <id>http://hu33.tech/2019/01/18/飞羽作品集（中）/</id>
    <published>2019-01-18T05:00:16.558Z</published>
    <updated>2019-01-20T13:22:40.404Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本作品集为飞羽原创，18岁生日时飞羽将其作为礼物赠与本人，现将该作品摘抄并记录在该博客中。</p></blockquote><h2 id="（二十一）《世界末日》"><a href="#（二十一）《世界末日》" class="headerlink" title="（二十一）《世界末日》"></a>（二十一）《世界末日》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（二十一）.jpg" alt="《世界末日》"></p><a id="more"></a><p>世界末日真的到来了，幸运的是，仁慈的上帝派了诺亚方舟拯救世界上所有的生灵。</p><p>诺亚方舟一到，大家就争相往上面挤。人类就开始维持秩序，分配大家上去的顺序。当然，人类理所当然是最先上去的，凭其所谓的智商，然后人类开始控制入口，觉得可以上的，就放行。</p><p>狮子马上挤上前：“我是万兽之王，必须得带我走吧！”人类想想，确实啊，狮子是代表性的动物，不带上不行。于是，狮子顺利进入了诺亚方舟。既然万兽之王能上诺亚方舟，那森林之王–老虎也没有不上诺亚方舟的理由吧！因此老虎也紧跟着上去了。</p><p>再然后，聪明的猴子，狡猾的狐狸等动物也一一上了诺亚方舟，等人类的朋友海豚挤上诺亚方舟时已经再也挤不上了，和平鸽一声下令：“出发！”诺亚方舟便开始向前方驶去，这次的目的地是月球，必须等地球平静后才能开回来。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（二十一）2.jpg" alt="《世界末日》"></p><p>开着开着，动物们开始望着这颗还湛蓝的地球，带着一丝的不舍。不过想到过一阵子又能回来，他们便也舒缓了。然而，接下来发生的事大家都始料未及的。由于离开了大气层，空气越发地稀薄，氧气已经很少了，大家都有点喘不过气来，这时有动物才意识到忘记带一样最重要的东西了–植物。其他什么动物都可以不带，唯独不能不带植物。</p><p>大家都争相往诺亚方舟挤，说着自己的重要性，而真正最重要的植物却一言不发。这下大家才真正清醒–看似最渺小的才是最伟大的。这下子，该是真正的世界末日了。</p><p>（能意识到所失去事物的重要性，这是种万幸，也是种不幸。）</p><p><code>----------本篇完----------</code></p><p>##（二十二）《秋》</p><p><img src="https://hu33.github.io/images/飞羽作品集/（二十二）.jpg" alt="《秋》"></p><p>残叶卷风起</p><p>飞花飘雨零</p><p>古月依然照</p><p>今人难想惜</p><p><code>----------本篇完----------</code></p><h2 id="（二十三）《沙漠里的树》"><a href="#（二十三）《沙漠里的树》" class="headerlink" title="（二十三）《沙漠里的树》"></a>（二十三）《沙漠里的树》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（二十三）.jpg" alt="《沙漠里的树》"></p><p>干涸的沙漠中心突然出现了一棵巨大的树，这件事可不寻常啊，要知道沙漠中心极热无比，寸草不生呢！</p><p>这棵大树吸引了许多沙漠动物的围观，大树被围得里三层外三层，什么稀奇古怪的动物，只要能来就都来了。然后大家开始研究为什么这棵大树会突然出现在沙漠中心，动物们用尽了所有它们会的语言来问大树，可大树总是沉默着，一言不发。动物们也束手无策，尽管无法获知大树到来的原因，但大家依旧对这棵大树有着很浓厚的兴趣，把它视作神物供奉。</p><p>又是很突然的一刻，大树消失得无影无踪，沙漠里的动物再次被惊动–一棵如此巨大的树怎么说消失就消失了呢，没有哪个动物知道这是海市蜃楼……</p><p><code>----------本篇完----------</code></p><h2 id="（二十四）《梦的枕头》"><a href="#（二十四）《梦的枕头》" class="headerlink" title="（二十四）《梦的枕头》"></a>（二十四）《梦的枕头》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（二十四）.jpg" alt="《梦的枕头》"></p><p>上帝的枕头一不小心遗落到了人间，被一个不知该说是幸运还是不幸的人捡到了。</p><p>枕头想：“既然他捡到了我，那也算是一种缘分吧！我就让他在梦里过得舒服点吧！”</p><p>太阳被约了赶下了山，捡到枕头的人也开始进入梦乡。枕头对他的大脑施了魔法，让他的愿望显示出来然后让他在梦里实现这个愿望。不过，枕头没想到这个人的愿望居然如此简单–有很多的糖可以吃。枕头当然欣然去梦里让他好好享受吃糖的快乐。一晚下来，捡到枕头的人做的梦里是五颜六色的糖，他吃得可开心了，一辈子都没吃过这么多的好吃的糖呢！</p><p>不过，他的口水全流在枕头身上，这可让枕头很不乐意–作为上帝的枕头，怎么能让人类的口水都流在自己身上呢？尽管很不乐意，但看到这个人做梦时笑得那么甜，它还是决定忍了。然而，接连很多天这个人都流口水，而且一次比一次多，枕头终于忍无可忍了，决定让他在梦里失去幸福，体会一下不幸的哀愁。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（二十四）2.jpg" alt="《梦的枕头》"></p><p>果然，这一天梦里，他的生活变得非常不幸，生活没有一件如意的事，他哭得很凄惨，半夜就哭醒来了，依然湿了枕头。这下枕头更纳闷了，这幸福不幸，不幸更不行呀！口水好歹是甜的，这眼泪也太咸了。如此过了几夜，梦枕更受不了了，它决定再想想别的办法。</p><p>上帝的枕头不愧是上帝的，一下子又想到了，它决定让他既不做幸福的梦也不做不幸的梦，而是做噩梦。然而，枕头还是失算了，捡枕头的人是个十足的胆小鬼，在梦里被吓个半死，额头上全都是汗了，枕头被他的汗浸湿了。这回枕头可是苦不堪言了，口水是甜的还不算惨，泪水是闲的也罢了，这汗水可是苦的呀，这苦枕头可怎么受得了……</p><p><img src="https://hu33.github.io/images/飞羽作品集/（二十四）3.jpg" alt="《梦的枕头》"></p><p>纠结了几天，枕头喝了几天苦汗水后实在没办法了，决定什么梦也不能让他做了，干脆让他失眠算了。这下子枕头不苦了，可苦了这个捡枕头的人了，连续的失眠怎么受得了呢？他似乎觉察到枕头的不对劲了，最终决定扔掉这个奇怪的枕头。</p><p>于是，枕头在第二天躺在了垃圾堆里。当然，它没躺多久，上帝就找到它了，把它弄干净带了回去。回去之后上帝问枕头感觉怎么样，枕头满口怨言呀！这人间还真不适合枕头这样的神物待着。</p><p>没办法，一般人都会有喜怒哀乐，不像上帝可以安心地枕着它入睡。不过这样也好，这就是天堂和人间的区别，有喜有怒有哀有乐，这才是人间的魅力所在。</p><p><code>----------本篇完----------</code></p><h2 id="（二十五）《飞羽》"><a href="#（二十五）《飞羽》" class="headerlink" title="（二十五）《飞羽》"></a>（二十五）《飞羽》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（二十五）.jpg" alt="《飞羽》"></p><p>飞羽飞，</p><p>霏雨雨，</p><p>飞雨雨飞羽。</p><p>蜚语飞，</p><p>语飞羽，</p><p>予非飞羽。</p><p><code>----------本篇完----------</code></p><h2 id="（二十六）《单翅天使》"><a href="#（二十六）《单翅天使》" class="headerlink" title="（二十六）《单翅天使》"></a>（二十六）《单翅天使》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十六）.jpg" alt="《单翅天使》"></p><p>天使做了一个梦，梦见自己只有一只翅膀，于是感到很好奇，就去问上帝：“上帝啊，我昨晚做梦梦见自己只剩一只翅膀了，这是为什么呀？”</p><p>上帝说：“如果你知道了为什么，你就可能真的只剩一只翅膀了，你还想知道吗？”</p><p>天使想了想，实在想知道为什么，就坚决问上帝为什么。上帝告诉他：“所有的天使原本都只有一只翅膀，为了好看，许多天使偷偷地偷了人家的翅膀，偷到翅膀的天使便用一双翅膀飞到了天堂，那些翅膀被偷了的天使就变成了人类，生活中天空下那一片土地上。”</p><p>天使一下子惊住了：“那我的翅膀岂不是偷来的？可是我没有去偷过啊！”</p><p>上帝无奈一笑：“在你出生时，你的父母就偷了一只翅膀，所以你现在就有了一双翅膀。那个和你同时出声的被偷了翅膀的小孩就生活在你脚底下那片土地。”</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十六）2.jpg" alt="《单翅天使》"></p><p>天使一下子惊呆了，他没想到自己是这样变成天使的，嚷嚷着要上帝取了他的那只偷来的翅膀。上帝平静地问天使：“翅膀取了你就不能飞翔了，你还愿意取吗？”</p><p>天使没有丝毫的迟疑，坚决要取下那只翅膀。于是，上帝取下了那只被偷来的翅膀，天使以为自己马上会因不能飞翔而坠落下去，离开这上帝居住的天堂。可没想到自己反而在往上升，那一只原本属于他的翅膀在带着他飞翔，他好奇地大声呼喊：“上帝，我这是要去哪啊？”</p><p>上帝笑了，乐呵呵地说：“去天堂啊，顺便告诉你，其实我不是上帝，只是看管这片区域的守卫罢了。”这下天使大彻大悟了，原来自己一直不在天堂啊，因为一只翅膀要带他去天堂，可另一只偷来的翅膀要去人间寻找它的助人而阻碍了他去天堂，取下那只翅膀之后，原来属于他的翅膀便带他去到了真正的天堂。</p><p>话说另一只被守卫取下的翅膀，自然是去人间寻找他的主人呗。历经千辛万苦之后，翅膀终于找到它那个从小就与它分离的主人，兴奋地对主人说：“主人啊，我是你的翅膀，带你去天堂的，你快戴上我吧，等你死后我们就可以去往天堂了。”</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十六）3.jpg" alt="《单翅天使》"></p><p>那主人大笑：“一只翅膀吗？没有一双翅膀可怎么带我去天堂呢？”翅膀就跟你他解释原因，可这主人就是不听，心想有一双翅膀的才是天使，才能居住在天堂，只有一只翅膀的岂不是怪物？便对翅膀摆了摆手，说还是等到有一双翅膀了再来接他去天堂吧。</p><p>这下翅膀也没有办法了，只能游走人间，寻找一个愿意戴着它去天堂的人，可是遗憾的是世人都认为天使有一双翅膀，没人愿意让这一只翅膀带着去天堂，因此这只翅膀就流量至今，仍在人间寻寻觅觅……</p><p>你梦到过一只带你去天堂的翅膀吗？如果还没梦到，请不要错过了，那些长着一双翅膀的可不是天使呢，别被骗了哦！</p><p><code>----------本篇完----------</code></p><h2 id="（二十七）《小傻》"><a href="#（二十七）《小傻》" class="headerlink" title="（二十七）《小傻》"></a>（二十七）《小傻》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十七）.jpg" alt="《小傻》"></p><p>我做了一个很美，</p><p>很美的梦。</p><p>你从土里发了芽，</p><p>一点一点地长大。</p><p>直到，</p><p>花繁叶茂，</p><p>像这幅图一样。</p><p>我的小傻，</p><p>快点长高吧。</p><p><code>----------本篇完----------</code></p><h2 id="（二十八）《虫与鸟》"><a href="#（二十八）《虫与鸟》" class="headerlink" title="（二十八）《虫与鸟》"></a>（二十八）《虫与鸟》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十八）.jpg" alt="《虫与鸟》"></p><p>从小鸟妈妈就教育小鸟：“小乖乖，要记住一个生存的道理–早起的鸟儿有虫吃，起晚了就会挨饿的。”</p><p>同样，从小毛毛虫妈妈就教育毛毛虫：“小乖乖，要记住一个生存的道理–早起的虫虫被鸟吃，起早了就会被吃掉的，所以我们要学会做懒虫哦。”</p><p>可是，事与愿违，乖乖鸟和毛毛虫偏偏就没听自己妈妈的话，乖乖鸟每天太阳晒屁股了才起来（按照这鸟巢的设计，晒屁股应该已经是中午了）。而毛毛虫每天还没亮就起来了，在草丛里玩耍，顺便吃点东西。</p><p>然而有一天，毛毛虫生病了，躺在床上没有起来，而乖乖鸟呢，因为每天起得晚没吃到虫虫，便决定早起一回，结果很遗憾，乖乖鸟还是没有遇到毛毛虫。从此它下定决心：“早起晚起都没虫，不如睡个好觉。”</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十八）2.jpg" alt="《虫与鸟》"></p><p>而毛毛虫这边呢，因为每天早起都没被鸟儿吃，所以决定不当懒虫，每天起来看日出。</p><p>日复一日，年复一年。乖乖鸟和毛毛虫都长大了，它们同样有了自己的后代，乖乖鸟对小乖乖说：“早起的鸟儿没虫吃，起晚点儿没事。”毛毛虫也对小毛毛虫说：“早起的虫虫没被鸟吃，别当懒虫。”</p><p>可是，经验告诉我们小乖乖鸟和小毛毛虫可不会这么听话，它们自然也都是反其道而行之，同样永不见面。</p><p>还是可是，这么多中，总有些听话的乖宝宝听了话，如果是鸟宝宝听话的话，自然能吃到虫宝宝，如果是虫宝宝听话的话，那结果可就惨了。</p><p>所以，听话之前，先判断一下你是什么~</p><p><code>----------本篇完----------</code></p><p>##（二十九）《花·叶》</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十九）.jpg" alt="《花·叶》"></p><p>瓜瓜在花盆里种下了一颗种子，正好是早春，瓜瓜一心一意地照顾这颗种子，每天幻想着不久后这颗种子会开出什么样的花朵。</p><p>过了好久好久，种子才刚刚发芽出来，一点点的嫩绿，却也让瓜瓜兴奋了好一阵子。不过秋天都到了，花盆里的植物也才长高了一点点，瓜瓜心想：“今年是看不到花了，看样子只有等明年才知道花会是什么样的，不过这样也好，能多点期待，多点想象。”</p><p>一眨眼又是一年了，原本种在花盆里的种子已经枝繁叶茂了，可偏偏就是不开花。瓜瓜有点失望了，可仍然很耐心地照顾着花盆里的植物，心里总是想着它会开出什么样的花，会是什么颜色的，什么形状的……</p><p>日复一日，年复一年，当年的小瓜瓜都已经长大了，可植物仍然没有开花。此时的花花已经成为了画家，专门画花的，他笔下的花各式各样，争奇斗艳，而原型都是这棵不开花的植物。</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（二十九）2.jpg" alt="《花·叶》"></p><p>后来的后来，瓜瓜知道了原来他当年种下的种子是不会开花的，不过开不开花对他来说已经不重要了，因为种子早已在他的心中开了花，无数无数朵，都是那么美丽。瓜瓜庆幸当年没有刻意去查一下种子为什么不开花，不然怎么会在他心里开出这么多的花呢。</p><p>很多事情，都像这种子一样，也许本来就只有叶却没有花，我们不必刻意去找寻那朵花，只需静下心来想象，心里开出的花永远是最美、最灿烂的，即使现实的花已经不在了，心中的花却依旧盛开着，陪伴着我们，永远，永远……</p><p><code>----------本篇完----------</code></p><h2 id="三十-《井底之蛙》（一）"><a href="#三十-《井底之蛙》（一）" class="headerlink" title="(三十)《井底之蛙》（一）"></a>(三十)《井底之蛙》（一）</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十）.jpg" alt="《井底之蛙》（一）"></p><p>当年的井底之蛙，在听从建议后跳到井外，欣赏到了大自然辽阔的美。</p><p>若干年后，它的后代又回到了当年的那个井底，一只野鹿经过这口井，看到了呆在井底的青蛙，不禁嘲笑起来–哈哈，又是一只井底之蛙，难道你的祖先没告诉过你外面世界的辽阔与美丽吗？大自然是如此的美好，你怎么能只呆在那口枯燥乏味的井里呢？</p><p>小青蛙无奈地笑了笑，叹了口气：“大自然确认是美丽的，不过那是当年我祖先所在的那个时代，现在还能是如此吗？外面到处都是危险，那么多的农药，还有那么的捕蛙人，我还敢在外面吗？现在啊，只有这枯燥的井底才是我的栖身之地了。”</p><p>野鹿嘲笑青蛙胆小，不屑地说：“不就是一点小危险吗？比起大自然的美算什么，只要稍微注意一点就不会有事了嘛。”</p><p>话还没说完，只听见一声枪响，野鹿倒在猎人的子弹下，小青蛙坚信住在井底的信念了……</p><p><code>----------本篇完----------</code></p><h2 id="（三十一）《井底之蛙》（二）"><a href="#（三十一）《井底之蛙》（二）" class="headerlink" title="（三十一）《井底之蛙》（二）"></a>（三十一）《井底之蛙》（二）</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十一）.jpg" alt="《井底之蛙》（二）"></p><p>躲在井底的青蛙也一天一天长大了，有了自己的后代。两只小青蛙从小就被教育外面很危险，这个井底才是最安全的。</p><p>青蛙姐姐听了妈妈的话，乖乖地呆在井底，把井底当成她的整个世界，生活得倒也挺自在的。青蛙弟弟可就不听话了，一心想着去外面闯荡一回。</p><p>一天晚上，青蛙弟弟看着皎洁的月光，越发想到外面去玩了，正好青蛙妈妈已经睡熟了。弟弟就轻轻摇醒姐姐：“姐姐，姐姐，快起来啦，我们偷偷去外面玩几天好不好啊？”青蛙姐姐马上拒绝：“不行，不行，妈妈都说了不准了，外面很危险的，你出去会死的。”</p><p>青蛙弟弟苦苦央求，缠着青蛙姐姐陪他出去玩，可青蛙姐姐就是不愿意。青蛙弟弟没办法了：“你不去就算了，我一个人去了，哼！”说完，青蛙弟弟就朝井外跳去，姐姐喊了两声，弟弟理也不理。这时青蛙妈妈也醒了，看着调皮的儿子离开了井底，伤心地喊了两声，也实在不敢追去，小青蛙的背景渐渐远去……</p><p><code>----------本篇完----------</code></p><h2 id="（三十二）《井底之蛙》（三）"><a href="#（三十二）《井底之蛙》（三）" class="headerlink" title="（三十二）《井底之蛙》（三）"></a>（三十二）《井底之蛙》（三）</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十二）.jpg" alt="《井底之蛙》（三）"></p><p>小青蛙一出来，就感觉到了世界的辽阔，兴奋地叫了一阵。感觉到有点饿了，便跳进一片鸣叫声不断的田里，开始寻找自己的猎物。</p><p>田里的食物比井里的就是多些，小青蛙只一小阵子就吃饱了，躺在一片草地上悠闲地睡觉了。</p><p>一觉醒来，小青蛙感觉肚子疼痛，知道吃的东西不干净了，正想着该怎么办，已经被一双手抓住扔到一片漆黑的袋子里去了，还传来一句笑声：“今天收获不错诶，捡了这么多只被毒到的青蛙。”这下子小青蛙后悔死了，还怀念着看过的风景，遗憾地叹了口气。</p><p>小青蛙和其它的青蛙被拿出去准备卖了，小青蛙和其它青蛙都在谈论自己的经历，小青蛙听得入迷了，好像自己就经历了那些事，尽管被抓了，可经历的那些事确实都很精彩，尽管被抓了倒也值得了。</p><p>不久之后，小青蛙和另外一些青蛙都被卖了出去，因为小青蛙太小了，主人把它给自己的儿子拿去玩了……</p><p><code>----------本篇完----------</code></p><h2 id="（三十三）《井底之蛙》（四）"><a href="#（三十三）《井底之蛙》（四）" class="headerlink" title="（三十三）《井底之蛙》（四）"></a>（三十三）《井底之蛙》（四）</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十三）.jpg" alt="《井底之蛙》（四）"></p><p>小孩拿到小青蛙后对它可好了，带它去草地上玩，跟着它一起蹦蹦跳跳，还给它好多零食。小青蛙感觉小孩真好，自己真是太幸运了，便也和小孩玩得很好。</p><p>不过没多久，小青蛙还是想念自己的妈妈和姐姐了。小孩似乎懂得了小青蛙的想法，几天之后，他就把小青蛙放了，要它去寻找自己的家。</p><p>小青蛙对小孩感激涕零，一蹦一跳地走了，路上，小青蛙又遇到了很多危险，不过小青蛙最终还是回到了井边。小青蛙看了一眼外面的世界，闭上眼睛美美地回忆了一番，跳回井里了。</p><p>看着儿子回来了，青蛙妈妈兴奋地哭了，抱着小青蛙就不放，青蛙姐姐看着回来的弟弟说：“外面是很危险吧，不过回来了就好。”小青蛙笑了笑：“危险是危险，不过更精彩啊！为了这些精彩，出去还是值得的。”</p><p>青蛙姐姐看了看外面的天空，若有所思，她似乎也在等待某一个夜晚了……</p><p><code>----------本篇完----------</code></p><h2 id="（三十四）《铅笔和橡皮》"><a href="#（三十四）《铅笔和橡皮》" class="headerlink" title="（三十四）《铅笔和橡皮》"></a>（三十四）《铅笔和橡皮》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十四）.jpg" alt="《铅笔和橡皮》"></p><p>瘦铅笔和胖橡皮从小就是敌人，不爱在一起玩，可偏偏主人把他们放在了一起。</p><p>铅笔盒橡皮整天都会在文具盒里吵架，有得争的，没得争的他们都能争得天翻地覆。终于有一天，他们彻底爆发了，铅笔不停地画，橡皮使劲地擦，不知不觉铅笔已经短到快没了，橡皮也用得差不多了。</p><p>就在他们的生命要因为这场战争而消失的时候，他们似乎醒悟过来了。铅笔先开的口：“诶，橡皮，我不想画了，你也别擦了。”橡皮想了想：“现在的我们已经没什么用了，不如快点离开吧，主人不会要我们的了。”</p><p>片刻的沉默，铅笔用最后的生命写下了大大的三个字–对不起。橡皮看了看，微微笑了一下，这次是他第一次没有擦去铅笔写的字，然后默默地把这三个字的周围擦得干干净净的。</p><p>白纸上，除了这三个字，什么也没留下……</p><p><code>----------本篇完----------</code></p><h2 id="（三十五）"><a href="#（三十五）" class="headerlink" title="（三十五）"></a>（三十五）</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十五）.jpg" alt=""></p><p>我寻找着光明</p><p>在无尽的黑夜</p><p>繁星闪烁</p><p>留下一夜的梦</p><p>纵使爬上</p><p>那高百尺的危楼</p><p>也摘不到</p><p>最近的那颗星</p><p>我迷茫地望着</p><p>等一颗流星划过</p><p>就一刻</p><p>便已足够</p><p>也许</p><p>你只是夜空的流萤</p><p>却成了</p><p>我梦里的流星</p><p>带着我的愿望划过</p><p>留给了我满眼的闪烁</p><p>那是一片</p><p>满是萤火虫飞舞的夜空</p><p>闪着</p><p>闪着</p><p>。。。。。。</p><p><code>----------本篇完----------</code></p><h2 id="（三十六）《月亮》"><a href="#（三十六）《月亮》" class="headerlink" title="（三十六）《月亮》"></a>（三十六）《月亮》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十六）.jpg" alt="《月亮》"></p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>地球人都以为月亮从古代一直存在，陪伴大家至今。其实才不是呢，大家都被骗了。</p><p>月亮的生命很短暂，一般都只有一个月左右，月亮在死去的那天夜里会生出一个月亮来，新的月亮会代替她妈妈的工作，慢慢长大、长大，然后再老去，又生出一个月亮。</p><p>其实月亮长大是很明显的事嘛，最开始那么小，然后慢慢变圆。可人类就是傻，偏偏以为月亮会魔术，自己变大又变小。</p><p>可是，意外总是在不经意间就发生了。三十日晚，月亮妈妈生出的不是女儿，而是一对双胞胎，准确的说法应该是龙凤胎。这下可麻烦了，一个天空可容不得两个月亮啊，不然肯定会打架的，即将死去的月亮妈妈灵机一动，要他们俩一人在天空呆几个小时，没有出现的那个就躲进云里。</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>不过这当弟弟的可没这么听话（刚刚忘说了，他们是姐弟俩），这天夜晚本该姐姐值班的，可弟弟偏偏要出来玩，这姐姐就不高兴了，值班是我的事，你来瞎搅和干啥呀，就要弟弟躲到云里去。</p><p>弟弟可没那么听话，你越说他越不听，在天空到处转悠，划出了好多漂亮的尾巴。这一划不要紧，可是让地上的人看见了，你想啊，这么美的东西谁不想要啊，于是各自想办法来套住这个调皮的月亮。</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十六）2.jpg" alt="《月亮》"></p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>人的智商往往是偏低的，这话一点不假。最主要的是，这月亮出来的时代正是草原智商第一高天才狼灰太狼的时代。灰太狼倒不要紧，他只对羊感兴趣。遗憾的是，他有一个爱美的红太狼老婆。</p><p>红太狼第一次看到这月亮的时候就深深地被迷住了，马上用平底锅对着灰太狼：“灰太狼你给我听着，要是你不能帮我把那个带尾巴的月亮弄给我，你就永远别回来了！”</p><p>于是，灰太狼踏上了收月之旅。</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>作为草原物理竞赛、化学竞赛及数学竞赛的冠军，灰太狼在半小时内就发明出了七七四十九项抓月亮的东西。</p><p>实践证明，灰太狼的发明是多余的，有尾巴的月亮因为飞得太快一不小心就撞在狼堡上，晕了。</p><p>红太狼见月亮来了，一个劲地兴奋。可才高兴了一下就犯难了：“这么大一个月亮，怎么才能做自己的装饰品呢？”</p><p>不一会儿灰太狼也回来了，正想说有尾巴的月亮不见了就发现月亮到自己家了，于是钻进实验室开始分析解剖此月亮的方法。</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十六）3.jpg" alt="《月亮》"></p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>红太狼和灰太狼还在想着办法，小灰灰就凑到了月亮旁边，轻轻闻了一下：“哇！好香啊！”于是忍不住一口咬下去，结果越吃越有味，月亮被咬出了很多的缺口，终于给疼醒来了。月亮见自己一身残缺的模样，哭着飞走了。</p><p>但是因为被咬的缺口实在太多了，又飞得太快，尾巴月亮就这样解体了。很多碎片就变成了星星，剩下的成了流星，散布在了夜空。</p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p>从此，天上又只有了一个月亮，继续以月为周期繁衍下去。</p><p><code>----------本篇完----------</code></p><h2 id="（三十七）《青蛙王子和青蛙公主》"><a href="#（三十七）《青蛙王子和青蛙公主》" class="headerlink" title="（三十七）《青蛙王子和青蛙公主》"></a>（三十七）《青蛙王子和青蛙公主》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十七）.jpg" alt="《青蛙王子和青蛙公主》"></p><p>很久很久以前，小月从田里捉到了两只蝌蚪，因为她听外婆说过，蝌蚪长大了可以变成青蛙王子，那样她就可以和王子生活在一起了。</p><p>日子一天天地过去，小月心里想着，王子会是什么样呢，一定很帅气吧。不过，她可没想过这两只蝌蚪是公是母，还想着有两个王子让她选呢。</p><p>蝌蚪不知不觉地长成了青蛙，这会儿小月只需等待某个早晨醒来会看到她的王子。</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十七）2.jpg" alt="《青蛙王子和青蛙公主》"></p><p>那一天果然来了，清晨，小月睁开眼睛便看到了变成王子的青蛙，可是王子旁边还有一个公主。这下小月不知该怎么办了，她可没想过会出现一个王子和一个公主啊。</p><p>这时王子说话了：“主人你好，感谢你对我们的照顾，不过这会儿我们该离开了。再见。”</p><p>小月正想说着什么，可这会儿她觉得王子和公主才是一对的，自己怎么好意思留下王子呢，下次一定只能抓一只青蛙作王子了。</p><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十七）3.jpg" alt="《青蛙王子和青蛙公主》"></p><p>又过了不久，小月已经从失去王子的悲伤中恢复过来了，毅然决然地再去田里捉蝌蚪。这次正好看见一只蝌蚪，小月兴奋地把它抓回了家里，等待着它长成王子，这一次，她依然以为肯定是王子而没考虑过公主。</p><p>不过小月还没来得及高兴，以前的青蛙王子和青蛙公主就来了，很不好意思地说：“不好意思，主人，这是我们的儿子，他已经在出生时就和另一只青蛙订婚了，所以……”小月没办法啊，只有把养成王子的青蛙还给青蛙夫妇。</p><p>这之后，小月再也没有去捉蝌蚪当王子，因为她知道，那是一个不属于自己的世界，她要找的是人类世界的王子。</p><p>又是很久很久之后，青蛙王子一家搬到小月家来住了，因为外面太危险了，这儿更适合他们。</p><p><code>----------本篇完----------</code></p><h2 id="（三十八）《蜡烛和灯》"><a href="#（三十八）《蜡烛和灯》" class="headerlink" title="（三十八）《蜡烛和灯》"></a>（三十八）《蜡烛和灯》</h2><p> <img src="https://hu33.github.io/images/飞羽作品集/（三十八）.jpg" alt="《蜡烛和灯》"></p><p>从前的从前，这个世界上还没有灯，蜡烛是全世界所有人最崇敬的东西，因为它能在黑夜带来光明。不管是诗人学者还是商人，都说蜡烛是样不可多得的好东西。</p><p>从前的后来，有个让所有蜡烛都讨厌的人出现了，叫爱迪生。因为他发明的灯让蜡烛失去了对光的主宰地位。</p><p>可是蜡烛并不服输，坚持认为自己比灯伟大，于是蜡烛王国就派人和灯王国谈判，输的一方将永远退出光的世界。</p><p>蜡烛方说得头头是道，紧紧围绕它们牺牲自我的伟大奉献精神谈论，希望以自己的精神来打败灯。而灯则围绕自己的光有多亮，又不会像蜡烛一样燃一会儿就没了……</p><p><img src="https://hu33.github.io/images/飞羽作品集/（三十八）2.jpg" alt="《蜡烛和灯》"></p><p>最终，电灯王国辩论得更有说服力，蜡烛王国决定从这个世界上消失。就在此时世界忽然停电了，正当电灯们没辙时，蜡烛们燃烧发出了光，一切又是那么的安详了。</p><p>蜡烛和电灯终于懂了，这个世界上，它们都是不可或缺的。其实他们都是发光为了照亮世界，只是生命长短不一罢了，又何苦非要比较出一个胜负来呢？</p><p><code>----------本篇完----------</code></p><h2 id="（三十九）《萤火虫的灯》"><a href="#（三十九）《萤火虫的灯》" class="headerlink" title="（三十九）《萤火虫的灯》"></a>（三十九）《萤火虫的灯》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（三十九）.jpg" alt="《萤火虫的灯》"></p><p>黑夜降临了，森林的草丛里，飞舞着几只萤火虫，他们拥有上天赐予的礼物–灯，但他们并不知道。</p><p>一只蚂蚁此时还没有回家，很遗憾，他确信自己迷路了，萤火虫火火正好从蚂蚁上方飞过。虽然只是微弱的光，但蚂蚁就是凭借那一丁点儿光认出了回家的路，蚂蚁朝火火大喊了一声：“谢谢你了萤火虫。”</p><p>火火像丈二的和尚摸不着头脑–刚才那只蚂蚁谢我干什么啊，我没做什么事。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（三十九）2.jpg" alt="《萤火虫的灯》"></p><p>不一会儿，萤火虫飞到了田边，青蛙妈妈正借着月色给小蝌蚪织衣服，等衣服织好让小蝌蚪穿上，它们就会变成青蛙了。可是月色太微弱，青蛙妈妈一不小心织错了，也不知从何改起，无奈地叹了口气：“唉，小蝌蚪们又得晚几天变青蛙了。”</p><p>萤火虫火火正飞累了，停在了青蛙妈妈的旁边，这不，青蛙妈妈不一会儿就改过来织错的衣服了，想着小蝌蚪马上就能变成青蛙，别提多高兴了，“呱呱”地向萤火虫道了谢。萤火虫又奇怪了，我刚刚是没做什么事啊，为什么青蛙妈妈要向我道谢呢？</p><p>……</p><p><img src="https://hu33.github.io/images/飞羽作品集/（三十九）3.jpg" alt="《萤火虫的灯》"></p><p>萤火虫这一晚飞过了很多地方，无论他飞到哪儿，总会听到道谢的声音。火火不知道大家为什么向他道谢，不过想到反正自己能帮助大家，那飞再久也无所谓了。</p><p>从此以后，每天夜晚萤火虫都会不停地在夜空下飞舞，知道日出才闭上眼休息。他们不知道，自己的身上有种叫“灯”的东西。</p><p>我想，我们每个人都是一只萤火虫，有着一盏只属于自己的独特的灯，那么，我们把这盏灯发出的萤火，分享给别人了吗？</p><p><code>----------本篇完----------</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本作品集为飞羽原创，18岁生日时飞羽将其作为礼物赠与本人，现将该作品摘抄并记录在该博客中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;（二十一）《世界末日》&quot;&gt;&lt;a href=&quot;#（二十一）《世界末日》&quot; class=&quot;headerlink&quot; title=&quot;（二十一）《世界末日》&quot;&gt;&lt;/a&gt;（二十一）《世界末日》&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/飞羽作品集/（二十一）.jpg&quot; alt=&quot;《世界末日》&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="作品集" scheme="http://hu33.tech/tags/%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    
      <category term="礼物" scheme="http://hu33.tech/tags/%E7%A4%BC%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>飞羽作品集（上）</title>
    <link href="http://hu33.tech/2019/01/13/%E9%A3%9E%E7%BE%BD%E4%BD%9C%E5%93%81%E9%9B%86%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://hu33.tech/2019/01/13/飞羽作品集（上）/</id>
    <published>2019-01-13T13:55:22.206Z</published>
    <updated>2019-01-20T13:19:09.142Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本作品集为飞羽原创，18岁生日时飞羽将其作为礼物赠与本人，现将该作品摘抄并记录在该博客中。</p></blockquote><h2 id="（一）《淡淡》"><a href="#（一）《淡淡》" class="headerlink" title="（一）《淡淡》"></a>（一）《淡淡》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（一）.jpg" alt="《淡淡》"></p><a id="more"></a><p>人生是一本最短也最长的书，</p><p>真实中夹杂着虚幻与飘无。</p><p>我们不停地写着，头脑麻木，</p><p>突然发现，</p><p>无数的喜悦与哀愁，都在不停地重复。</p><p>也许我们早该醒悟，</p><p>去寻找人生真正的归宿。</p><p>你的欢笑是我的翅膀，</p><p>带我飞离书中的荒芜。</p><p><code>----------本篇完----------</code></p><h2 id="（二）"><a href="#（二）" class="headerlink" title="（二）"></a>（二）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（二）.jpg" alt=""></p><p>两滴雨住在云里，整日悠闲，四处闲逛。</p><p>一天，一滴雨被吹过的风带走了，还没来得及和自己的朋友道别就落到了一片池塘里。原本它以为云中的生活才是最舒适安逸，没想到这池塘是如此迷人–鱼儿们自由嬉戏，一两只蜻蜓在池面飞过，……雨滴喜欢上了这里的生活。</p><p>然而，池塘中的雨滴还想着云中的雨滴，它不能让它的朋友孤单地生活在云里，不过一旦回去，就不知道什么时候才能再落到这片池塘。纠结了一番后，池塘的雨滴还是觉得朋友更重要，便努力地吸收阳光，希望将自己蒸发回云里。</p><p>云中的雨滴同样在想着它的朋友，它在担心朋友落下后生活会不会很困苦，它不能独自在云中过着安逸的生活，让自己的朋友受苦。于是，它努力地挣扎着，一心想落下去寻找自己的朋友，毕竟，两个一起受苦比一个单独受苦要好过些。</p><p>终于有一天，池塘中的雨滴吸收了足够多的阳光，兴奋地飞上天去寻找自己的朋友，也就在那一刻，云中的雨滴挣脱了束缚向下落去。他们相遇在半空，它笑了，它也笑了，因为尽管彼此依旧分离，但心中那一份友谊已在半空相遇的那一瞬定格。</p><p>（这是童话，亦菲童话）</p><p><code>----------本篇完----------</code></p><h2 id="（三）《风筝与风》"><a href="#（三）《风筝与风》" class="headerlink" title="（三）《风筝与风》"></a>（三）《风筝与风》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（三）.jpg" alt="《风筝与风》"></p><p>角落里有一只风筝，身上布满了灰尘。</p><p>一天，风筝实在受不了这无聊的生活，偷偷跑出去寻找能带给风筝天堂般快乐的风。</p><p>风筝先飞到大树的枝头，期盼地问大树：“大树爷爷，您知道风在哪儿吗？”大树看了看摇曳着的树叶：“看，这不就是吗？”风筝挠了挠头：“哪有啊？除了树叶什么都没有嘛，大树爷爷肯定是看我太小，在逗我玩呢，我还是去别处寻找吧！”</p><p>风筝飞啊，飞啊，飞到了云朵旁边，风筝急切地问云朵：“云朵姐姐，你知道风在哪儿吗？”云朵惊讶地看着风筝：“哈哈，你傻呀，风不就在这儿吗？”风筝又纳闷了：“明明就没有嘛，你们怎么都逗我玩呢！”风筝想找云朵问清楚，可云朵已经捂着嘴偷笑着飘走了。</p><p>不知不觉，风筝已经飘到了天堂，这儿一片欢声笑语，只有风筝闷闷不乐，因为它还是没有看到风，它在想风不是能带给他天堂般的快乐吗？可是自己已经到天堂了，怎么还是一点都不快乐啊！风筝受不了了，大喊了一声：“风啊，你到底在哪啊！”只听四周传来声音：“呵呵，傻孩子，你以为是谁带你到这天堂上来的啊？”</p><p>风筝突然明白了，原来风一直就在它身边，只是自己看不到罢了。</p><p>我们每个人都是风筝，总有那么一些人是我们的风，我们只顾着寻找他们，却不知道其实他们一直在我们身边，默默地帮助着我们，不离，不弃……</p><p><code>----------本篇完----------</code></p><h2 id="（四）《逆流的溪水》"><a href="#（四）《逆流的溪水》" class="headerlink" title="（四）《逆流的溪水》"></a>（四）《逆流的溪水》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（四）.jpg" alt="《逆流的溪水》"></p><p>一条小溪哗啦啦地流着，带着欢声与笑语。</p><p>突然有一天，溪水在想自己会去哪，便问周围的大树自己会去哪儿。</p><p>大树说：“流到河里啊！”</p><p>溪水又问：“然后呢？”</p><p>“流去江里。”</p><p>“再然后呢？”</p><p>“流到大海里。”</p><p>“再然后呢？”</p><p>“到大海里就是你们最终的归宿，你们可以尽情地咆哮，也可以平静地生活。总之，你们是最伟大的。”</p><p>溪水有些兴奋：“最伟大的？那我们该做些什么事呢？”</p><p>大树笑呵呵的，“你们流入大海后就什么都不用做了，没有什么能再阻拦你们，连太阳也蒸发不了你们。”</p><p>溪水倒是有点失落了，它就是想着能多做些什么才不断前行，如果前方是没有意义的伟大，它又何苦盲目前行呢？于是，溪水毅然决然往回流，不顾一切阻挠。</p><p>溪水艰苦地逆流着，前方的路越来越窄了，溪水看到前方的路快到尽头了，源头的后方是一片荒凉。溪水勇敢地冲了过去，冲破了源头，冲向它不曾见过的一片荒凉–它以前只看到溪水流过的地方有花有草，从未知道源头后面是日此干涸。</p><p>终于，溪水放弃了大海的伟大，成就了源头背后的绿意盎然。</p><p><code>----------本篇完----------</code></p><h2 id="（五）《遥夜》"><a href="#（五）《遥夜》" class="headerlink" title="（五）《遥夜》"></a>（五）《遥夜》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（五）.jpg" alt="《遥夜》"></p><p>漫步于无边的原野，</p><p>望见天空繁星点点。</p><p>我擦亮憧憬的双眼，</p><p>等待着流星的出现。</p><p>抬头那一瞬间，</p><p>浮现的是你微笑的脸。</p><p><code>----------本篇完----------</code></p><h2 id="（六）《猫·狗·鼠》"><a href="#（六）《猫·狗·鼠》" class="headerlink" title="（六）《猫·狗·鼠》"></a>（六）《猫·狗·鼠》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（六）.jpg" alt="《猫·鼠·狗》"></p><p>很久很久以前，猫和鼠是朋友，漂泊在外，狗则住在安逸的屋子里。</p><p>寒冬到了，猫和鼠觉得在外面过不下去了，边去投靠住在温暖屋子里的狗。狗见它们可怜，便瞒着助人偷偷把猫和老鼠带回家里。</p><p>猫和鼠在狗的家里住下后生活非常闲适，因为屋里暖暖的，而且狗每次都会分一些吃的给它们，有时狗甚至只吃骨头，把肉都给猫和鼠吃。然而，猫和鼠越发地贪心了，猫有时就趁狗不在时偷吃助人家的鱼，老鼠更过分，不仅偷吃，还打了很多个洞，把自己吃不下的都藏了起来。忠诚的狗怎么会想到自己如此真心对待的两个朋友会这样对待它的主人呢，所以依然对猫和狗很好，还教他们很多本领，希望它们以后可以像它一样看家。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（六）2.jpg" alt="《猫·鼠·狗》"></p><p>终于有一天，鼠将“魔爪”伸向了鱼，这让猫有些生气了，便对鼠说：“你有那么多吃的了，为什么还要把我的鱼也搬到你洞里去？”老鼠十分不屑：“鱼又不是你一个人的，凭什么我不能吃！”这下猫火了，干脆一拍两散，向狗告发了老鼠的恶行，并说证据都在洞里面。这下老鼠自知没办法了，躲进洞里去不敢出来。从此以后狗一见老鼠就非常仇恨地扑过去抓它，当然，几乎没抓到过，所以才说狗拿耗子–多管闲事。其实这不是闲事，是狗要报仇哩。</p><p>鼠躲进洞之后，一心想着要报猫的告发之仇。可它又打不过猫，便在猫偷吃鱼的时候钻出洞出现在狗的面前，待狗追它时把狗带到猫吃鱼的地方再钻进洞里。狗见猫在偷吃鱼，气不打一处来–我对你不薄啊，你却这样对我。便猛地扑上去要咬猫，猫幸好有爬树这一招才侥幸逃脱。它知道是鼠害它被狗发现偷吃鱼的，所以，整日想着要吃掉老鼠报仇。</p><p>从此以后，狗一见猫就疯狂地扑上去捉，猫一见老鼠就疯狂地扑上去捉。猫一见狗就马上爬上树，鼠一见狗和猫就钻到洞里去。</p><p><code>----------本篇完----------</code></p><h2 id="（七）《蝶与蚕》"><a href="#（七）《蝶与蚕》" class="headerlink" title="（七）《蝶与蚕》"></a>（七）《蝶与蚕》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（七）.jpg" alt="《蝶与蚕》"></p><p>在众多的故事里，都是碟笑蚕丑陋，而结果是蝶由蚕破茧而来。很可惜，在这个故事里，角色转换了一下，由蚕来笑蝶了。this is why？因为这是个现实的童话，于人类而言，能吐丝的蚕才是有用的，整日在花丛中打转的蝴蝶简直一文不值。</p><p>蚕便笑话蝶：“你看你有什么用，整日虚度光阴，在那些花丛中飞舞着有什么用呢？最后不得落地为土，还得落花怨蝶？”蝶一想，蚕说得确实有道理，自己的人生似乎就在花丛飞舞中虚度了，蝴蝶越想越惭愧，便飞进了一棵树洞，整日练着吐丝，然而终未吐出一根丝来。</p><p>终于有一天，蝴蝶受不了吐不出丝的生活，飞去问蚕如何吐丝，此时的蚕已吐出丝变茧，裹住了自己。蝴蝶就一直在外面等着蚕出来好问它要怎么吐丝，结果自然是–蝴蝶看见另一只蝴蝶破茧而出，它这才明白了，自己就由蚕变来的。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（七）2.jpg" alt="《蝶与蚕》"></p><p>既然丝已吐尽，何苦再为难自己呢？吐丝的意义只在于对人类有用， 做蚕做蝴蝶，于自己本身有何区别？于是蝴蝶选择做回自己本身，不再想吐丝的事，尽情飞舞在花丛中。</p><p>其实，于蚕于蝶，它们的生活都是有意义的，其区别只在于对人是否有益。活出自己，便已足矣。呆在家中看书是一种美，旅游在外也是一种美。无数种美的交织，成就了认识的幸福。</p><p><code>----------本篇完----------</code></p><h2 id="（八）《幻·非幻》"><a href="#（八）《幻·非幻》" class="headerlink" title="（八）《幻·非幻》"></a>（八）《幻·非幻》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（八）.jpg" alt="《幻·非幻》"></p><p>晴天下雨，</p><p>雨天天晴。</p><p>这不是天气，</p><p>而是–心情。</p><p>白天天黑，</p><p>黑夜天亮。</p><p>这不是时间，</p><p>而是–生活。</p><p><code>----------本篇完----------</code></p><h2 id="（九）"><a href="#（九）" class="headerlink" title="（九）"></a>（九）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（九）.jpg" alt=""></p><p>迷路，</p><p>有时也是一种艺术，</p><p>可惜，</p><p>一般人永远无法理解，</p><p>幸运的是，</p><p>我邂逅了这种艺术，</p><p>日复一日年复一年。</p><p><code>----------本篇完----------</code></p><h2 id="（十）"><a href="#（十）" class="headerlink" title="（十）"></a>（十）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十）.jpg" alt=""></p><p>我梦见自己在做梦……</p><p>梦中的梦中的我在梦游。</p><p>如鬼如魂，无人理会。</p><p>当我醒时，我亦梦游。</p><p>当我梦游，我仍醒着。</p><p>（梦中的我于梦游中写下之，不知应从左往右念，还是从右往左念）</p><p><code>----------本篇完----------</code></p><h2 id="（十一）"><a href="#（十一）" class="headerlink" title="（十一）"></a>（十一）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十一）.jpg" alt=""></p><p>我是一个球，很复杂的球。</p><p>从我出生的那一刻起，我就会跑了，我看着前方是一片光明，便不停向前追逐着，然而有时前方会闪过一个影子拦住我的视线，在我靠近它的时候它又消失了。</p><p>我跑着跑着就累了，在路上挥洒汗水，无论我如何跑，都只能看到那片光明，始终无法抵达。</p><p>终于，我不再刻意去追寻那片光明，静静地享受生活，享受同时存在的白天与黑夜。</p><p>我是地球，轨迹是圆……</p><p><code>----------本篇完----------</code></p><h2 id="十二-《不要和陌生人说话》"><a href="#十二-《不要和陌生人说话》" class="headerlink" title="(十二)《不要和陌生人说话》"></a>(十二)《不要和陌生人说话》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十二）.jpg" alt="《不要和陌生人说话》"></p><p>小猪要去上学了，小猪妈妈提醒它：“猪儿，千万别和陌生人说话，免得被骗走卖了。”</p><p>小猪听从了猪妈的叮嘱，在路上，它遇到了同是去上学的刺猬，刺猬主动上前去打招呼：“嘿，小猪，去上学吗？咱一起去吧！”小猪吓得躲到一边：“不行不行，我妈妈说了不能和陌生人说话，更别说一起去上学了。”说完匆匆走了。</p><p>跑着跑着，兔子从草丛跳了出来：“小猪小猪，上个学干嘛这么急匆匆的，又不会迟到。”小猪丢下一句：“不能和陌生人说话。”又向前跑去。</p><p>小猪就这样一直跑到了学校， 教室里面它一言不发，心里就是猪妈说的那句“不要和陌生人说话。”</p><p>渐渐地，教室里的同学们都反感起来了，班长小猴就对班主任山羊大伯说小猪不和它们说话。山羊大伯去问小猪：“你怎么都不和新同学们说话呢？才开学第一天你们不会就闹矛盾了吧？”</p><p>小猪很委屈：“我没和它们闹矛盾，但是我妈说了不要和陌生人说话呢！”</p><p>山羊大伯哈哈大笑：“你出生的那时候你认识你妈妈吗？”</p><p><img src="https://hu33.github.io/images/飞羽作品集/（十二）2.jpg" alt="《不要和陌生人说话》"></p><p>小猪想了想，摇摇头说：“不认识。”</p><p>“那不就是了，你出生时所有的人都是陌生人，但你还是慢慢熟悉了它们，你的亲人们渐渐不再是陌生人了，不是吗？”</p><p>小猪点了点头：“嗯。”</p><p>“所以嘛，你要和同学们多讲话，所有熟悉的人都是从陌生人开始的。”小猪若有所思，在接下来的时间里慢慢和所有的同学都成了朋友。</p><p>（若干年前，我们彼此都是陌生人。幸运的是，我们勇敢地敞开了心扉。从此，希望我们能是一辈子的朋友。因为能从陌生人变成朋友，是一种缘分。）</p><p><code>----------本篇完----------</code></p><h2 id="（十三）"><a href="#（十三）" class="headerlink" title="（十三）"></a>（十三）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十三）.jpg" alt=""></p><p>我看过这么一个故事，一头老牛正在吃草，背上的一个蚊子对它说：“老牛啊，我要走了了。”老牛看都没看，继续吃草。蚊子又耐着性子说：“老牛啊，我要走了啊！”老牛依然不理会蚊子。蚊子有点生气：“喂，老牛，我要飞走了！”老牛终于发话了：“你要走就走吧！你来时我没注意到，你走了我又何须理会。”</p><p>也许我们在许多人心中只是无足轻重的过客，既然要走，何须让每个人都知道呢。然而，有时不经意间就会有对我们很重要的人出现在我们身旁，仅因为我们没注意到他们的到来而任由他们离开，不予理会吗？生命中总有那么多重要的人来到又离去，要想不后悔失去，现在赶紧珍惜吧！可怕的不是没注意到他们的到来，而是在他们离开之后仍无动于衷或茫然未醒。</p><p><code>----------本篇完----------</code></p><h2 id="（十四）《爱轨》"><a href="#（十四）《爱轨》" class="headerlink" title="（十四）《爱轨》"></a>（十四）《爱轨》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十四）.jpg" alt="《爱轨》"></p><p>两根永世不相亲近的铁轨</p><p>让人们一直误以为</p><p>它们彼此充满仇恨</p><p>一样的冰冷</p><p>一样的固执</p><p>一样的从不理会</p><p>其实</p><p>火车驶过之时</p><p>它们都借着枕木</p><p>感受彼此咣咣铛铛的</p><p>心跳的速度</p><p>即使延伸至千里</p><p>也从未停止</p><p>而且</p><p>两根铁轨都不偷懒</p><p>谁也不肯</p><p>偷偷缩回自己的肩头</p><p>不让对方</p><p>承受多一丝的沉重</p><p>（许多人总奇怪我为何爱看铁轨，我只是为它们的从未交汇却不离不弃而沉醉。人们总为它们可望而不可及心碎，却不知它们心灵早已依偎。）</p><p><code>----------本篇完----------</code></p><h2 id="（十五）《阳光照不到的角落》"><a href="#（十五）《阳光照不到的角落》" class="headerlink" title="（十五）《阳光照不到的角落》"></a>（十五）《阳光照不到的角落》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十五）.jpg" alt="《阳光照不到的角落》"></p><p>在一处偏僻又荒凉的地方，有一个阴暗的角落，太阳每天东升西落，却总是照不到这个角落。</p><p>这个角落就很伤心，因为它对温暖的阳光总是可望而不可及。它就对蚂蚁感叹它的伤心，蚂蚁听了对角落很是同情，便喊了一大群同伴去搬阳光，可阳光一搬到靠近角落的地方就消失了。</p><p>蚂蚁又去找老鼠帮忙，老鼠就说：“我在墙上开个洞，阳光就能从后方射进角落了。”角落忙说不可：“这不是要凿穿我的身体吗？怎么能行呢？”</p><p>老鼠又去找聪明的小猴帮忙，小猴就说要风帮忙把阳光吹进来吧！大家一听立马去找风，可是无论风用多大的劲，阳光还是吹不进角落，风说别急，它去求太阳照一下角落。</p><p>大家怀着期待等着风去说服太阳，可是尽管太阳很为大家的友情感动，但却不能改变运行的轨迹，不然地球很多地方都会遭殃的。动物们有些失望，但角落安慰它们：“没事的，你们已经尽力了，也许我和阳光这辈子没缘吧！”</p><p><img src="https://hu33.github.io/images/飞羽作品集/（十五）2.jpg" alt="《阳光照不到的角落》"></p><p>第二天一早醒来，角落就感觉阳光暖暖地照在身上，这可不是太阳变轨哩，而是动物们用反光镜把阳光照过来的，友谊的力量总是那么伟大，总是不能改变太阳的轨迹，也能改变阳光的方向。</p><p>角落开心地笑了，不仅因为身上暖暖的，更因为心里暖暖的，能有这样一群好朋友，即使身体感觉不到阳光也绝不会寒冷的，因为心里依旧洒满了阳光。</p><p><code>----------本篇完----------</code></p><h2 id="（十六）"><a href="#（十六）" class="headerlink" title="（十六）"></a>（十六）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十六）.jpg" alt=""></p><!-- more --><p>“是时光</p><p>将我凝固；</p><p>还是我</p><p>将时间停住。“</p><p>当树的年轮不再重复</p><p>我惟愿漫步</p><p>于记忆中那片</p><p>若影若现的荒芜</p><p><code>----------本篇完----------</code></p><h2 id="（十七）"><a href="#（十七）" class="headerlink" title="（十七）"></a>（十七）</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十七）.jpg" alt=""></p><p>我们都是人生路上的过客，</p><p>路经彼此生命中的沼泽。</p><p>有些沼泽我们轻轻踏过，</p><p>有些沼泽我们越陷越深。</p><p>我陷在谁的沼泽里，</p><p>谁又为我的沼泽所困。</p><p>如梦若然，</p><p>待醒已晚。</p><p><code>----------本篇完----------</code></p><h2 id="（十八）《蜗牛》"><a href="#（十八）《蜗牛》" class="headerlink" title="（十八）《蜗牛》"></a>（十八）《蜗牛》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十八）.jpg" alt="《蜗牛》"></p><p>有些动物天生就是官二代，像老虎；有些动物天生就是富二代，像蜗牛–一出生就有房子。</p><p>蜗牛的房子以前是很大的，不像现在只可以住它自己一个。这责任要归咎于蜗牛的祖先。</p><p>那是很久很久以前，所有的动物都住在原始森林里，动物里有四大天王，它们分别是狮子、老虎、大象和蜗牛（别惊讶，那时的蜗牛真的很大）。狮子和老虎爱欺负甚至杀死其他的动物，而大象和蜗牛则选择吃素不爱杀生。</p><p>这一天，狮子和老虎心血来潮，决定来一次大杀戮，吃一顿好的。小动物们可着急了，四处逃窜，但很难摆脱强大的狮子和老虎，便纷纷向蜗牛求救，钻进蜗牛巨大的房子里。虽说蜗牛不杀生，可是它很讨厌有其他的动物到它的房子里，便要赶它们出去。动物们可怎么敢出去啊，外面便是狮子和老虎，出去不等于送死吗？可是蜗牛可管不了这么多，态度非常强硬地赶动物们出去。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（十八）2.jpg" alt="《蜗牛》"></p><p>小兔子第一个妥协了，委屈地走了出去，刚出去一下就被吃掉了，随着小兔从拥挤的房里走出去，房子变小了一点。动物们见小兔的悲惨遭遇更加不敢出去了，可蜗牛态度非常蛮横，说再不出去就让老虎狮子进来了。动物们失望了，一个一个走出蜗牛的房子，随着它们的走出，蜗牛的房子越变越小，最后只能容纳它自己了。</p><p>走出去的动物中属老鼠最聪明，马上去求救大象，钻进了大象的长鼻子里，没想到大象却因此死了，这也让大家发现了大象的弱点。</p><p>从此，四大天王就只有狮子和老虎可以称王了，一个森林之王，一个万兽之王。大象看到老鼠就非常惊恐，至于蜗牛，失去了大大的房子，开始受其他动物的欺凌，只能经常把头缩进壳里。也许这就是报应吧，谁让它不救那些小动物呢。</p><p>就这么一次杀戮，让四大天王只剩两个。也许若干年之后，狮子和老虎也会变得弱小或暴露出自己的弱点。到时候森林就会是一片和平了，也许蚂蚁还能坐在狮子头上玩哩！</p><p><code>----------本篇完----------</code></p><h2 id="（十九）《渴望飞翔的企鹅》"><a href="#（十九）《渴望飞翔的企鹅》" class="headerlink" title="（十九）《渴望飞翔的企鹅》"></a>（十九）《渴望飞翔的企鹅》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（十九）.jpg" alt="《渴望飞翔的企鹅》"></p><p>企鹅群里出现了一直不寻常的企鹅，当然，从外表肯定看不出来，但它又一颗渴望飞翔的心。其实这个想打来得很巧合，是在它出生的那个夜晚，它做了一个美梦，梦见自己飞翔在天空，那个梦醒来后，它就开始寻找飞翔。</p><p>当它向同伴说出这个想法时，所有的同伴都嘲笑着它，它只能孤独地面对现实，默默地坐着飞翔的梦。</p><p>于是，它开始付诸实践。首先就是强化已经退化了的翅膀，加强对翅膀的训练，让翅膀有足够的力量维持它飞翔的身体。然后它又开始减肥，它很清楚目前肥胖的身体很难飞起来，尽管很可爱。再接下来，它开始爬到一处不高的冰山上往下跳，感受短暂的飞翔的感觉。尽管它已经很用力地扑腾翅膀，但每次还是很沉重地摔在了冰上。冰很冷，但它的心依然滚烫着。</p><p><img src="https://hu33.github.io/images/飞羽作品集/（十九）2.jpg" alt="《渴望飞翔的企鹅》"></p><p>终于，那一天到来了。它再次从冰山跃下，它–依旧没有飞起来，而是摔在冰上并滑进水里。在滑进水里的那一刻，它突然醒悟了，奋力向前游着，留下一串欢快的笑声在游动的轨迹后面。</p><p>其实我们从天上往下看那片企鹅游过的海洋，不也是反射的蓝天吗？远远看去，它就是飞翔在自己渴望的那片蓝天，丝毫没有改变，也许更加轻快呢！我们每个人都有自己的一片蓝天，任我们飞翔，可是我们找到了自己的那片蓝天了吗？</p><p><code>----------本篇完----------</code></p><h2 id="（二十）《灯》"><a href="#（二十）《灯》" class="headerlink" title="（二十）《灯》"></a>（二十）《灯》</h2><p><img src="https://hu33.github.io/images/飞羽作品集/（二十）.jpg" alt="《灯》"></p><p>电线两端连着两盏灯</p><p>一盏灯亮着</p><p>另一盏，也亮着</p><p>夜正不紧不慢地前行</p><p>不知不觉</p><p>它们都已累了</p><p>一盏灯说：“晚安。”</p><p>另一盏也通过电线</p><p>回应“晚安。“</p><p>夜仍不紧不慢地前行</p><p>一盏灯亮着</p><p>另一盏，依旧亮着</p><p>只是 为了</p><p>照亮彼此</p><p>夜–已亮</p><p><code>----------本篇完----------</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本作品集为飞羽原创，18岁生日时飞羽将其作为礼物赠与本人，现将该作品摘抄并记录在该博客中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;（一）《淡淡》&quot;&gt;&lt;a href=&quot;#（一）《淡淡》&quot; class=&quot;headerlink&quot; title=&quot;（一）《淡淡》&quot;&gt;&lt;/a&gt;（一）《淡淡》&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/飞羽作品集/（一）.jpg&quot; alt=&quot;《淡淡》&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="作品集" scheme="http://hu33.tech/tags/%E4%BD%9C%E5%93%81%E9%9B%86/"/>
    
      <category term="礼物" scheme="http://hu33.tech/tags/%E7%A4%BC%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>《你的名字》影评</title>
    <link href="http://hu33.tech/2019/01/11/%E3%80%8A%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%8B%E5%BD%B1%E8%AF%84/"/>
    <id>http://hu33.tech/2019/01/11/《你的名字》影评/</id>
    <published>2019-01-11T10:45:11.082Z</published>
    <updated>2019-01-12T11:15:15.728Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/影评/你的名字.jpeg" alt="《你的名字》剧照"></p><a id="more"></a><blockquote><p>导演：<a href="https://movie.douban.com/celebrity/1005177/" target="_blank" rel="external">新海诚</a></p><p>编剧：<a href="https://movie.douban.com/celebrity/1005177/" target="_blank" rel="external">新海诚</a>、<a href="https://movie.douban.com/celebrity/1330986/" target="_blank" rel="external">Waris Dirie</a>、<a href="https://movie.douban.com/celebrity/1286916/" target="_blank" rel="external">Sherry Hormann</a></p><p>演员：<a href="https://movie.douban.com/celebrity/1185637/" target="_blank" rel="external">神木隆之介</a>、<a href="https://movie.douban.com/celebrity/1316660/" target="_blank" rel="external">上白石萌音</a></p></blockquote><p>一句话评价：超好看超好看超好看！</p><p>这是唯一一部电脑上看过后还想去电影院看的电影，没有失望，满满的满足感，从整体的剧情到唯美的画面再到人物塑造我都特别喜欢。</p><p>其实看电影这种事，除了电影本身的质量外，自己的状态也特别能影响整个观影心情。最近因为一些事情导致心里老是空落落又七上八下的，就是那种惦记着某个东西却得不到的感觉。这不正与电影中他俩一直在寻找着神秘却找不到（准确说是并不知道在找什么）一样嘛。</p><p>还好，还好最后他俩相遇了，还好泷鼓足了勇气叫住了三叶，还好在那之前他俩都还单着，还好还好。</p><p>如果一辈子都想不起来心里那个东西是什么该如何生活？因为想不起，所以何来忘记。</p><p>回到电影中来，其实整个电影中伏笔都设置非常好，包括后面勅使炸发电站，泷喝口嚼酒来产生联系。电影中每一幕都是有意图的，都是能在后面找到对应的情节的，每一个画面，每一句台词都是有意义的。这就是我特别喜欢这部电影的原因，饱满而不做作，多看几遍也还是能看出新东西来。</p><p>关键是！！每一帧都可以当做壁纸，真的是美翻天！！！</p><p><code>本影评写于16年12月</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/影评/你的名字.jpeg&quot; alt=&quot;《你的名字》剧照&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="影评" scheme="http://hu33.tech/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>《沙漠之花》影评</title>
    <link href="http://hu33.tech/2019/01/11/%E3%80%8A%E6%B2%99%E6%BC%A0%E4%B9%8B%E8%8A%B1%E3%80%8B%E5%BD%B1%E8%AF%84/"/>
    <id>http://hu33.tech/2019/01/11/《沙漠之花》影评/</id>
    <published>2019-01-11T10:00:35.514Z</published>
    <updated>2019-01-11T10:44:14.605Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/影评/沙漠之花.jpg" alt="《沙漠之花》剧照"></p><a id="more"></a><blockquote><p>导演：<a href="https://movie.douban.com/celebrity/1286916/" target="_blank" rel="external">Sherry Hormann</a></p><p>编剧：<a href="https://movie.douban.com/celebrity/1305350/" target="_blank" rel="external">Smita Bhide</a>、<a href="https://movie.douban.com/celebrity/1330986/" target="_blank" rel="external">Waris Dirie</a>、<a href="https://movie.douban.com/celebrity/1286916/" target="_blank" rel="external">Sherry Hormann</a></p><p>演员：<a href="https://movie.douban.com/celebrity/1014172/" target="_blank" rel="external">Liya Kebede</a>、<a href="https://movie.douban.com/celebrity/1044915/" target="_blank" rel="external">Sally Hawkins</a>、</p></blockquote><p>这部电影讲的是一个受割礼的索马里女孩从非洲逃到英国，被唐纳森发掘而成为一代超模，而后勇敢站出来向全世界反映割礼的残忍与对女性的不尊重。</p><p>整部电影的基调比较平淡，却不时地透露出让人心塞的情景，尤其当女主角会议割礼的过程，让人无比揪心，悲恸却有种哭不出来的压抑。</p><p>看完电影后便查了很多关于割礼的资料，这种残害人身心的习俗真是太可怕了，千千万万的妇女死于这种惨无人道的习俗，千千万万的妇女因这种毫无因全弊无利的事情而无法享受很多美好的体验。好在总有人站出来，顶着巨大压力和危险与信仰做斗争，为女权奋斗，为更多人的幸福与正常生活而奋斗。</p><p>很庆幸自己一直活得没什么障碍，那些自以为很大的事很大的问题在这面前根本不值一提。任何困难都可以被解决，可能不一定恢复，但是能愈合。</p><p><code>本影评写自16年8月</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/影评/沙漠之花.jpg&quot; alt=&quot;《沙漠之花》剧照&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="影评" scheme="http://hu33.tech/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>《爆裂鼓手》影评</title>
    <link href="http://hu33.tech/2019/01/11/%E3%80%8A%E7%88%86%E8%A3%82%E9%BC%93%E6%89%8B%E3%80%8B%E5%BD%B1%E8%AF%84/"/>
    <id>http://hu33.tech/2019/01/11/《爆裂鼓手》影评/</id>
    <published>2019-01-11T05:38:00.229Z</published>
    <updated>2019-01-11T10:36:36.564Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hu33.github.io/images/影评/爆裂鼓手.jpg" alt="《爆裂鼓手》剧照"></p><a id="more"></a><blockquote><p>导演：<a href="https://movie.douban.com/celebrity/1014996/" target="_blank" rel="external">Damien Chazelle</a></p><p>编剧：<a href="https://movie.douban.com/celebrity/1014996/" target="_blank" rel="external">Damien Chazelle</a></p><p>主演：<a href="https://movie.douban.com/celebrity/1313408/" target="_blank" rel="external">Miles Teller</a>、<a href="https://movie.douban.com/celebrity/1147911/" target="_blank" rel="external">J.K. Simmons</a></p></blockquote><p>与其说Andrew是在追求自己的梦想，还不如说他是对击鼓有着强烈的偏激的疯狂的热爱。当然这种热爱与Fletcher的魔鬼式训练与咄咄逼人是分不开的。有人把《爆裂鼓手》当做励志来看，寓意一切伟大背后必历经辛酸磨难，但我在观看的过程中却感受到了压迫的气息，不仅仅是Fletcher对学生们的压迫，还有Andrew对自己的逼迫，逼迫自己不断练习不断加速，到最后哪怕是出车祸了都不愿暂时放弃一次机会。</p><p>最终的Andrew应该是成功的，但是成功是需要代价的，也是需要突破的机遇。如此偏执的热爱若未完全突破很容易出问题的，从Andrew跟女朋友说分手及家庭聚餐上说的话就能感觉出来。</p><p>不管怎样，本宝宝还是偏向于快乐学习健康成长，娃哈哈！</p><p><code>本影评写自16年8月</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://hu33.github.io/images/影评/爆裂鼓手.jpg&quot; alt=&quot;《爆裂鼓手》剧照&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hu33.tech/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="影评" scheme="http://hu33.tech/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>Chrome显示小于12px的字体</title>
    <link href="http://hu33.tech/2019/01/10/Chrome%E6%9C%80%E5%B0%8F%E6%98%BE%E7%A4%BA12px%E5%AD%97%E4%BD%93/"/>
    <id>http://hu33.tech/2019/01/10/Chrome最小显示12px字体/</id>
    <published>2019-01-10T13:52:44.437Z</published>
    <updated>2019-01-10T14:00:51.647Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><code>Chrome</code>上默认最小字体是<code>12px</code>，这就意味着你想设置某个元素(可能是个上标或下标)的<code>font-size</code>为<code>9px</code>，结果显示出来的是<code>12px</code>，有那么一点恼火是吧？</p><a id="more"></a><p>曾经是可以使用<code>-webkit-text-size-adjust: none</code>来禁止网页调整字体大小，但是<code>Chrome27</code>之后就将该属性禁用了（该属性<a href="https://trac.webkit.org/changeset/145168/webkit" target="_blank" rel="external">具体变更集</a>）。这个禁用是有道理的，因为该属性很容易被滥用：很多开发者会直接将该属性设置为全局属性，然后当用户放大或缩小页面时（按住Ctrl滚动鼠标滚轮可缩放网页），文字却维持定义的大小而不放缩，给用户带来的不太友好的体验。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>现在一般是使用<code>transform: scale(0.82)</code>来实现小于<code>12px</code>的字体显示。比如要显示<code>8px</code>的字体，那么可以将该元素加上以下属性：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-size</span>: 12<span class="selector-tag">px</span>;</div><div class="line"><span class="selector-tag">-webkit-transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.667</span>);</div><div class="line"><span class="selector-tag">-moz-transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.667</span>);</div><div class="line"><span class="selector-tag">-ms-transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.667</span>);</div><div class="line"><span class="selector-tag">-o-transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.667</span>);</div><div class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(0<span class="selector-class">.667</span>);</div></pre></td></tr></table></figure><p>只要缩小到需要尺寸的比例即好。需要注意的是，这个方案需要该元素表现为<code>inline-block</code>。</p><p>具体效果<a href="http://jsbin.com/wiroweh/1/edit?html,css,output" target="_blank" rel="external">戳这儿</a>~</p><p>上述代码可以使用<code>sass</code>的<code>@mixin</code>抽象一下（<code>@mixin</code>相关内容可以看<a href="https://github.com/hu33/project-problem-notes/blob/master/sass%20-%20%E4%BD%BF%E7%94%A8mixin%E6%88%96%E5%8D%A0%E4%BD%8D%E7%AC%A6%E5%A4%8D%E7%94%A8CSS%E4%BB%A3%E7%A0%81.md" target="_blank" rel="external">这里</a>），通过传参数来得到想要的字体。</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@mixin webkit-font-size($size: 10) &#123;</div><div class="line">    font-size: 12px;</div><div class="line">    -webkit-transform: scale($size / 12);</div><div class="line">    -moz-transform: scale($size / 12);</div><div class="line">    -ms-transform: scale($size / 12);</div><div class="line">    -o-transform: scale($size / 12);</div><div class="line">    transform: scale($size / 12);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Chrome&lt;/code&gt;上默认最小字体是&lt;code&gt;12px&lt;/code&gt;，这就意味着你想设置某个元素(可能是个上标或下标)的&lt;code&gt;font-size&lt;/code&gt;为&lt;code&gt;9px&lt;/code&gt;，结果显示出来的是&lt;code&gt;12px&lt;/code&gt;，有那么一点恼火是吧？&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="问题记录" scheme="http://hu33.tech/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>《高性能JavaScript》- DOM编程</title>
    <link href="http://hu33.tech/2017/09/15/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDJavaScript%E3%80%8B-%20DOM%E7%BC%96%E7%A8%8B/"/>
    <id>http://hu33.tech/2017/09/15/《高性能JavaScript》- DOM编程/</id>
    <published>2017-09-15T12:26:58.482Z</published>
    <updated>2019-01-13T08:30:01.737Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，用JS进行<code>DOM</code>操作那是灰常的昂贵，毕竟人家web应用的性能瓶颈之一啊，但也是有不少优化的法子的~~本章大致从三个方向阐述了<code>DOM</code>编程的优化方法。</p><h3 id="尽量减少访问和修改DOM次数"><a href="#尽量减少访问和修改DOM次数" class="headerlink" title="尽量减少访问和修改DOM次数"></a>尽量减少访问和修改DOM次数</h3><p>浏览器中通常是独立实现<code>DOM</code>和<code>JavaScript</code>的，这样可以允许其他技术和语言也能共享使用<code>DOM</code>和渲染函数，但这也意味着JS想去访问<code>DOM</code>，是要花费一定代价的，访问和修改的次数越高，代价就越高，代码运行速度就越慢。</p><a id="more"></a><h4 id="优化点1-使用DOM更新页面内容时，克隆已有元素，而不是创建新元素"><a href="#优化点1-使用DOM更新页面内容时，克隆已有元素，而不是创建新元素" class="headerlink" title="优化点1  使用DOM更新页面内容时，克隆已有元素，而不是创建新元素"></a>优化点1  使用DOM更新页面内容时，克隆已有元素，而不是创建新元素</h4><p>在大多数浏览器中，节点克隆都更有效率，虽然效果不是特别明显~~所以对于一些需要多次重复创建的元素，可以先创建第一个，然后重复拷贝操作。也就是用<code>element.cloneNode()</code>代替<code>document.createElement()</code>。</p><h4 id="优化点2-遍历HTML集合时，把集合存在局部变量中，并把length缓存在循环外部，用局部变量代替这些需要多次读取的元素"><a href="#优化点2-遍历HTML集合时，把集合存在局部变量中，并把length缓存在循环外部，用局部变量代替这些需要多次读取的元素" class="headerlink" title="优化点2  遍历HTML集合时，把集合存在局部变量中，并把length缓存在循环外部，用局部变量代替这些需要多次读取的元素"></a>优化点2  遍历HTML集合时，把集合存在局部变量中，并把length缓存在循环外部，用局部变量代替这些需要多次读取的元素</h4><p>看个例子就造了：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//最慢</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">collectionGlobal</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> coll = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>),</div><div class="line">    len = coll.length,</div><div class="line">    name = <span class="string">''</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> count = <span class="number">0</span>; count &lt; len; count++) &#123;</div><div class="line">        name = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>)[count].nodeName;</div><div class="line">        name = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>)[count].nodeType;</div><div class="line">        name = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>)[count].tagName;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//较快</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">collectionGlobal</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> coll = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>),</div><div class="line">    len = coll.length,</div><div class="line">    name = <span class="string">''</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> count = <span class="number">0</span>; count &lt; len; count++) &#123;</div><div class="line">        name = coll[count].nodeName;</div><div class="line">        name = coll(<span class="string">'div'</span>)[count].nodeType;</div><div class="line">        name = coll(<span class="string">'div'</span>)[count].tagName;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//最快</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">collectionGlobal</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> coll = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>),</div><div class="line">    len = coll.length,</div><div class="line">    name = <span class="string">''</span>,</div><div class="line">    ele = <span class="literal">null</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> count = <span class="number">0</span>; count &lt; len; count++) &#123;</div><div class="line">        ele = coll[count]; </div><div class="line">        name = ele.nodeName;</div><div class="line">        name = ele.nodeType;</div><div class="line">        name = ele.tagName;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> name;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="优化点3-访问元素节点时，推荐使用只返回元素节点的API，因为它们的执行效率比自己在JS代码中实现过滤的效率要高"><a href="#优化点3-访问元素节点时，推荐使用只返回元素节点的API，因为它们的执行效率比自己在JS代码中实现过滤的效率要高" class="headerlink" title="优化点3  访问元素节点时，推荐使用只返回元素节点的API，因为它们的执行效率比自己在JS代码中实现过滤的效率要高"></a>优化点3  访问元素节点时，推荐使用只返回元素节点的API，因为它们的执行效率比自己在JS代码中实现过滤的效率要高</h4><p>这些API如下：</p><ul><li><code>children</code> – <code>childNodes</code></li><li><code>childElementCount</code> – <code>childNodes.length</code></li><li><code>firstElementChild</code> – <code>firstChild</code></li><li><code>lastElementChild</code> – <code>lastChild</code></li><li><code>nextElementSibling</code> – <code>nextSibing</code></li><li><code>previousElementSibling</code> – <code>previousSibing</code></li></ul><h4 id="优化点4-使用querySelectorAll-查询DOM"><a href="#优化点4-使用querySelectorAll-查询DOM" class="headerlink" title="优化点4  使用querySelectorAll()查询DOM"></a>优化点4  使用<code>querySelectorAll()</code>查询DOM</h4><p>当咱需要得到特定的DOM元素列表时，需要使用<code>getElementById()</code>和<code>getElementByTagName()</code>进行组合调用，而且还得手动遍历筛选，好不麻烦且效率低下~~</p><p>后来~~<code>querySelectorAll()</code>就横空出世了，只要传入相应的CSS选择器字符串，就能得到咱需要的元素了，而且还是浏览器原生API，比起用JS和DOM操作来遍历查找元素不要快太多啊~~</p><p>而且，<code>querySelectorAll()</code>返回的是一个<code>NodeList</code>，是一个快照而不是动态集合，所以还避免了HTML集合会导致的性能问题。</p><h3 id="尽量避免重绘和重排"><a href="#尽量避免重绘和重排" class="headerlink" title="尽量避免重绘和重排"></a>尽量避免重绘和重排</h3><p>浏览器下载完页面中所有的组件后会解析并生成两个内部数据结构–<code>DOM</code>树和<code>Render</code>树，<code>DOM</code>树都知道是表示页面结果，<code>Render</code>树则是表示<code>DOM</code>节点如何显示。<code>Render</code>树中的节点就是一个“盒”，一旦<code>DOM</code>树和<code>Render</code>树构建完成，浏览器就开始绘制元素了。</p><p>当<code>DOM</code>的变化影响了元素的几何属性（宽和高），浏览器就需要重新计算元素的几何属性，其他元素的几何属性和位置也会因此受到影响。浏览器会使渲染树中受到影响的元素的部分失效，并重新构建<code>Render</code>树，这就是传说中的重排。重排之后，浏览器会重新绘制受影响的部分，这就是重绘。</p><p>易得：重绘和重排都是代价很昂贵的操作，所以要尽量避免避免啊~</p><h4 id="优化点5-合并多次对DOM和样式的修改，然后一次处理"><a href="#优化点5-合并多次对DOM和样式的修改，然后一次处理" class="headerlink" title="优化点5  合并多次对DOM和样式的修改，然后一次处理"></a>优化点5  合并多次对DOM和样式的修改，然后一次处理</h4><ul><li>改变样式：可以用<code>CSSText</code>属性做批量修改</li><li>批量修改<code>DOM</code>：可以让<code>DOM</code>脱离文档流，修改完再带回文档中，具体有三种方式：<ol><li>隐藏元素（<code>display：none</code>），修改后再重新显示</li><li>使用文档片段在当前<code>DOM</code>之外构建一个子树，再把它拷贝回文档</li><li>将原始元素拷贝到一个脱离文档流的节点中，修改该副本节点，完成后再替换原始元素</li></ol></li></ul><h4 id="优化点6-缓存布局信息"><a href="#优化点6-缓存布局信息" class="headerlink" title="优化点6  缓存布局信息"></a>优化点6  缓存布局信息</h4><p>现在大多数浏览器对重排进行了优化，通过队列化修改并批量修改执行来实现，但是有种操作会强制刷新队列并要求计划任务立即执行！它！就！是！获取元素的布局信息！因为查询布局信息时，浏览器会为了返回最新值而会刷新队列并应用所有变更。</p><p>这个时候，局部变量又派上用场了，我们可以通过获取布局信息，把它赋值给局部变量，然后操作局部变量，尽可能地减少布局信息的获取次数。</p><h4 id="优化点7-让元素脱离动画流"><a href="#优化点7-让元素脱离动画流" class="headerlink" title="优化点7  让元素脱离动画流"></a>优化点7  让元素脱离动画流</h4><p>假设有个元素处在页面顶部，然后它可以展开/折叠，那岂不是对它之后所有的元素位置都会产生影响？那岂不是要进行大规模重排？？那岂不是很消耗性能？？？</p><p>咱可以让它脱离文档流啊~先给它设置绝对定位，然后它想咋动就咋动吧，反正就导致一小区域的重绘，等动画结束再恢复它本来的定位。</p><h3 id="优化点8-使用事件委托"><a href="#优化点8-使用事件委托" class="headerlink" title="优化点8  使用事件委托"></a>优化点8  使用事件委托</h3><p>元素绑定事件处理器是有代价的，会占用处理时间，而且浏览器还要跟踪这些处理器，又会占更多的内存。要是页面上一大堆元素都需要绑定一个或多个事件处理器，那还不堵死啊。。。</p><p>不过呢，大部分事件是能够冒泡的，咱就可以给外层元素绑定一个处理器，用来处理在其子元素上触发的事件。除了性能上有很大的优化，事件委托其实还有个好处，就是如果一个元素的子元素是动态的，它也可以进行处理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，用JS进行&lt;code&gt;DOM&lt;/code&gt;操作那是灰常的昂贵，毕竟人家web应用的性能瓶颈之一啊，但也是有不少优化的法子的~~本章大致从三个方向阐述了&lt;code&gt;DOM&lt;/code&gt;编程的优化方法。&lt;/p&gt;
&lt;h3 id=&quot;尽量减少访问和修改DOM次数&quot;&gt;&lt;a href=&quot;#尽量减少访问和修改DOM次数&quot; class=&quot;headerlink&quot; title=&quot;尽量减少访问和修改DOM次数&quot;&gt;&lt;/a&gt;尽量减少访问和修改DOM次数&lt;/h3&gt;&lt;p&gt;浏览器中通常是独立实现&lt;code&gt;DOM&lt;/code&gt;和&lt;code&gt;JavaScript&lt;/code&gt;的，这样可以允许其他技术和语言也能共享使用&lt;code&gt;DOM&lt;/code&gt;和渲染函数，但这也意味着JS想去访问&lt;code&gt;DOM&lt;/code&gt;，是要花费一定代价的，访问和修改的次数越高，代价就越高，代码运行速度就越慢。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="笔记" scheme="http://hu33.tech/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://hu33.tech/tags/JavaScript/"/>
    
      <category term="性能" scheme="http://hu33.tech/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>《高性能JavaScript》- 数据存取</title>
    <link href="http://hu33.tech/2017/09/14/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDJavaScript%E3%80%8B-%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96/"/>
    <id>http://hu33.tech/2017/09/14/《高性能JavaScript》- 数据存取/</id>
    <published>2017-09-14T11:06:39.958Z</published>
    <updated>2019-01-10T14:34:51.662Z</updated>
    
    <content type="html"><![CDATA[<p>数据的存储位置会很大程度影响其读取速度，so本章就是从这个方向来讨论的优化点~</p><h3 id="优化点1-将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量"><a href="#优化点1-将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量" class="headerlink" title="优化点1  将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量"></a>优化点1  将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量</h3><p>函数在执行过程中，每遇到一个变量，都会经历一次标识符解析的过程，来决定从哪里获取或存储数据。这个过程就是在搜索执行环境的作用域链，从作用域头部（当前函数运行的活动对象）开始搜索，直到找到标识符。</p><a id="more"></a><p>然鹅，标识符的解析也是要产生性能开销的好不啦，<strong>标识符的位置越深，它的读写速度肯定会越慢啊~</strong>也就是说，函数中读写局部变量是最快的，因为它们是在作用域链最前线嘛，读取全局变量是最慢的，毕竟是在作用域链最末端位置嘛（emmm…优化了<code>JavaScript</code>引擎的先不管哈）。</p><p>所以啊，如果我们在一个函数中要多次引用全局变量或者是跨作用域的变量，最好是先用一个局部变量存起来，通过这个局部变量去访问就好啦。</p><h3 id="优化点2-避免使用with语句，谨慎使用try-catch语句"><a href="#优化点2-避免使用with语句，谨慎使用try-catch语句" class="headerlink" title="优化点2  避免使用with语句，谨慎使用try-catch语句"></a>优化点2  避免使用<code>with</code>语句，谨慎使用<code>try-catch</code>语句</h3><p><code>with</code>语句和<code>try-catch</code>中的<code>catch</code>语句在执行时是有临时改变作用域链的能力的！这么强大的技能怎么能随便用呢？</p><ul><li><p><code>with</code>语句用来给对象的所有属性都创建一个变量，它会将指定的对象添加到作用域链中，看下这个例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildUrl</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> qs = <span class="string">"?debug=true"</span>;</div><div class="line">  <span class="keyword">with</span>(location) &#123;</div><div class="line">      <span class="keyword">var</span> url = href + qs;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> url;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当代码执行到<code>with</code>语句时，一个新的变量对象被创建，它包含了参数指定的对象的所有属性，这个对象会被推入到作用域链首位，也就是说，函数的所有局部变量就被挤到第二个作用域对象中了，访问的代价也就高了啊~~</p></li><li><p><code>try-catch</code>语句中的<code>catch</code>子句也有同样的效果。当<code>try</code>代码块中发生错误时，执行过程会自动跳到<code>catch</code>子句，然后把异常对象推入一个变量对象并置于作用域链首位。</p><p>咱可以尽量简化代码来是的<code>catch</code>子句对性能的影响最小化，推荐将错误委托给一个函数来处理：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mapArr</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> result;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        result = arr.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</div><div class="line">            <span class="keyword">return</span> item*<span class="number">2</span>;</div><div class="line">        &#125;);</div><div class="line">    &#125; <span class="keyword">catch</span>(ex) &#123;</div><div class="line">        handleError(ex);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleError</span>(<span class="params">ex</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'ex: '</span>, ex);</div><div class="line">&#125;</div><div class="line"></div><div class="line">mapArr(&#123;&#125;);</div></pre></td></tr></table></figure><p>其中<code>catch</code>子句的作用域链如下：</p><p><img src="http://ow7p6xhhi.bkt.clouddn.com/2-1.png" alt=""></p><p>书中给出这种推荐的理由是：只执行一条语句，且没有局部变量的访问，作用域链的临时改变不会影响代码性能。<strong>但是！有点想不通的是，如果要访问局部变量，<code>handleError()</code>怎么访问得到嘛，难道是通过传参？那在<code>catch</code>子句中调用<code>handleError()</code>并传参的话也就意味着还是要在<code>catch</code>里访问局部变量嘛。。。如果<code>handleError()</code>不用访问局部变量，表示<code>catch</code>子句里也不用访问局部变量呀，那用不用这个委托函数岂不是没差？？？</strong></p></li></ul><h3 id="优化点3-确实必要时才使用动态作用域"><a href="#优化点3-确实必要时才使用动态作用域" class="headerlink" title="优化点3  确实必要时才使用动态作用域"></a>优化点3  确实必要时才使用动态作用域</h3><p>像<code>with</code>语句、<code>try-catch</code>语句中的<code>catch</code>子句、或者包含<code>eval()</code>的函数，都算是动态作用域。动态作用域只存在于代码运行时，也就是说不能通过静态分析（查看代码结构）检测出来。</p><p>有些经过优化的<code>JavaScript</code>引擎，会尝试通过分析代码来确定哪些变量可以在特定时候被访问，它们会试图避开传统作用域链的查找，当涉及动态作用域时，这种优化方式就失效了。</p><h3 id="优化点4-只在必要时使用对象成员"><a href="#优化点4-只在必要时使用对象成员" class="headerlink" title="优化点4  只在必要时使用对象成员"></a>优化点4  只在必要时使用对象成员</h3><p>理由如下：</p><ul><li>属性或方法在原型链中的位置越深，访问它的速度就越慢</li><li>嵌套的对象成员越深，其读取速度就越慢</li></ul><p>比如说，在同一个函数中没有必要多次读取同一个对象成员。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasEitherClass</span>(<span class="params">element, className1, className2</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> element.className == className1 || element.className == className2;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这个代码中读取了两次<code>element.className</code>，也就是说执行了两次对象查找，咱可以将值保存在局部变量中减少一次查找。改成下面这样子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasEitherClass</span>(<span class="params">element, className1, className2</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> currentClassName = element.className;</div><div class="line">  <span class="keyword">return</span> currentClassName == className1 || currentClassName == className2;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>反正这一章最重要的优化点就在于<strong>善用局部变量做缓存</strong>~把那些需多次使用的对象成员、数组元素、跨域变量都保存在局部变量就对了，谁叫它访问速度快呢~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据的存储位置会很大程度影响其读取速度，so本章就是从这个方向来讨论的优化点~&lt;/p&gt;
&lt;h3 id=&quot;优化点1-将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量&quot;&gt;&lt;a href=&quot;#优化点1-将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量&quot; class=&quot;headerlink&quot; title=&quot;优化点1  将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量&quot;&gt;&lt;/a&gt;优化点1  将常用的跨作用域变量存储在局部变量中，然后直接访问局部变量&lt;/h3&gt;&lt;p&gt;函数在执行过程中，每遇到一个变量，都会经历一次标识符解析的过程，来决定从哪里获取或存储数据。这个过程就是在搜索执行环境的作用域链，从作用域头部（当前函数运行的活动对象）开始搜索，直到找到标识符。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="笔记" scheme="http://hu33.tech/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://hu33.tech/tags/JavaScript/"/>
    
      <category term="性能" scheme="http://hu33.tech/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>《高性能JavaScript》- 加载并执行</title>
    <link href="http://hu33.tech/2017/09/13/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDJavaScript%E3%80%8B-%20%E5%8A%A0%E8%BD%BD%E5%B9%B6%E6%89%A7%E8%A1%8C/"/>
    <id>http://hu33.tech/2017/09/13/《高性能JavaScript》- 加载并执行/</id>
    <published>2017-09-13T11:22:56.869Z</published>
    <updated>2019-01-13T08:22:34.996Z</updated>
    
    <content type="html"><![CDATA[<p>这一章主要从管理浏览器中的js代码来进行阐述优化点。</p><h3 id="优化点1：将脚本放在底部"><a href="#优化点1：将脚本放在底部" class="headerlink" title="优化点1：将脚本放在底部"></a>优化点1：将脚本放在底部</h3><p>讲道理，按我们的理解，将js文件和css文件一起放在head中好像没什么毛病，先加载它们，有助于页面渲染和正确交互呀。</p><p>可是！可是坑爹的是，脚本是会阻塞页面渲染的啊，浏览器需要等到它们全部下载并执行完成后，才继续页面渲染。所以把脚本放页面头部会导致明显的延迟，表现为显示空白页面，用户无法浏览页面，也无法与页面进行交互。</p><a id="more"></a><p>更坑爹的是，有些浏览器下载js文件是串行的，也就是说每个文件必须等到前一个文件下载并执行完成后才会开始下载，在这些个文件逐个下载过程中，浏览器上的页面就是一片白茫茫啊~~现在很多浏览器都允许并行下载js文件了，但是仍然会阻塞其他资源的下载，比如图片。尽管脚本的下载过程不会相互影响了，但是页面还是得等所有的js代码下载并执行完才能继续。所以呀，新的浏览器只是治标不治本啊。</p><p>恩，综上所述，咱要把所有的<code>&lt;script&gt;</code>标签放到<code>&lt;body&gt;</code>标签的底部，来尽量减少对整个页面下载的影响。</p><h3 id="优化点2：合并脚本"><a href="#优化点2：合并脚本" class="headerlink" title="优化点2：合并脚本"></a>优化点2：合并脚本</h3><p>这个当然是为了减少http请求带来的性能开销咯。下载1个100k的文件会比下载4个25k的文件要快的呀。</p><p>可以使用离线的打包工具或者类似Yahoo! combo handler的实时在线服务实现。</p><h3 id="优化点3：无阻塞脚本"><a href="#优化点3：无阻塞脚本" class="headerlink" title="优化点3：无阻塞脚本"></a>优化点3：无阻塞脚本</h3><p>上回讲到，合并脚本可以减少http请求数，提高性能。可是问题来了，合并完的脚本可能很大啊，那我浏览器得等这么大一个脚本下载并执行完再进行后面的操作嘛？</p><p>当然，我们也是有办法解决的。咱实现无阻塞脚本不就好了？咱可以等页面加载完再加载js代码呀，专业点讲，就是在<code>window</code>对象的<code>load</code>事件触发后再下载脚本。实现方法有如下几种：</p><h4 id="延迟的脚本"><a href="#延迟的脚本" class="headerlink" title="延迟的脚本"></a>延迟的脚本</h4><p>主角：<code>defer</code></p><p>技能：允许并行下载（包括其他资源哦），但不会执行，直到DOM加载完成（<code>onload</code>事件被触发前）</p><p>可以看个例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Script Defer Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    alert(<span class="string">'defer'</span>);</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    alert(<span class="string">'script'</span>);</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'load'</span>); </div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>猜猜弹出顺序是啥？恩，<code>script</code>、<code>defer</code>、<code>load</code>。</p><p><em>注：h5规范里讲了，<code>defer</code>属性仅当<code>src</code>属性声明时才生效~~</em></p><p>BTW，<code>async</code>也是允许并行下载的，但是它跟<code>defer</code>不同的在于它是下载完了就直接执行了，没有<code>defer</code>那么好的耐心，还等<code>dom</code>完成加载后才执行。</p><p><img src="https://hu33.github.io/images/高性能JavaScript/1-1.jpg" alt=""></p><h4 id="动态脚本元素"><a href="#动态脚本元素" class="headerlink" title="动态脚本元素"></a>动态脚本元素</h4><p>原理：使用DOM操作创建一个<code>&lt;script&gt;</code>元素，这个元素中加载某个js文件，然后将该<code>&lt;scirpt&gt;</code>元素添加到页面中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">script.type = <span class="string">"text/javascript"</span>;</div><div class="line">script.src = <span class="string">"file.js"</span>;</div><div class="line"><span class="built_in">document</span>.head.append(script);</div></pre></td></tr></table></figure><p>技能：无论何时启动下载，文件的下载和执行都不回阻塞页面其他进程。</p><p>这种方式还有个特点：返回的代码一般会立即执行（是不是想到了JSONP，哈哈哈）。但是我可能需要它下载完成且准备就绪的时候才执行啊，这个时候，<code>&lt;script&gt;</code>的<code>onload</code>事件就派上用场了~~封装一个<code>loadScript</code>方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadScript</span>(<span class="params">url, callback</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    script.type = <span class="string">"text/javascript"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (script.readyState) &#123; <span class="comment">//还不是为了兼容IE</span></div><div class="line">        <span class="keyword">if</span> (script.onreadystatechange) &#123;</div><div class="line">            <span class="keyword">if</span> (script.readyState === <span class="string">'loaded'</span> || script.readyState === <span class="string">'completed'</span>) &#123;</div><div class="line">                script.onreadystatechange = <span class="literal">null</span>;</div><div class="line">                callback();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        script.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            callback();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    script.src = url;</div><div class="line">    <span class="built_in">document</span>.getElementByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(script);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果需要按顺序下载执行代码的话，可以进行嵌套使用<code>loadScript()</code>方法。当然如果多个文件的下载顺序很重要，更好的做法还是把它们按正确的顺序合并成一个文件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">loadScript(<span class="string">'file1.js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  loadScript(<span class="string">'file2.js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    loadScript(<span class="string">'file3.js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      alert(<span class="string">'all files are loaded~~'</span>)</div><div class="line">    &#125;)</div><div class="line">  &#125;)</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h4 id="XMLHttpRequest脚本注入"><a href="#XMLHttpRequest脚本注入" class="headerlink" title="XMLHttpRequest脚本注入"></a>XMLHttpRequest脚本注入</h4><p>原理：创建一个<code>xhr</code>对象，用它下载js文件，然后通过创建动态<code>&lt;script&gt;</code>元素将代码注入页面中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'file1.js'</span>, <span class="literal">true</span>);  <span class="comment">//第三个参数表是否异步</span></div><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (xhr.readystate === <span class="number">4</span>) &#123;</div><div class="line">        <span class="keyword">if</span>(xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span> || xhr.status === <span class="number">304</span>) &#123;</div><div class="line">            <span class="keyword">var</span> script = <span class="built_in">document</span>.craeteElement(<span class="string">'script'</span>);</div><div class="line">            script.type = <span class="string">"text/javascript"</span>;</div><div class="line">            script.text = xhr.responseText;</div><div class="line">            <span class="built_in">document</span>.body.appendChild(script);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">xhr.send(<span class="literal">null</span>);</div></pre></td></tr></table></figure><p>优点：js代码下载后不会自动执行，你可以把脚本的执行推迟到准备好的时候。<em>（为什么啊？？？书上说代码返回在script标签外，所以不自动执行…没看懂啊…）</em></p><p>局限：不能跨域请求js文件，也就不能从CDN下载咯。</p><h4 id="推荐的无阻塞模式"><a href="#推荐的无阻塞模式" class="headerlink" title="推荐的无阻塞模式"></a>推荐的无阻塞模式</h4><p>先添加动态加载所需的代码，然后加载初始化页面所需的剩下的代码。</p><p>有几个延迟加载工具：</p><ul><li><code>LazyLoad</code>类库，其实就是<code>loadScript()</code>的增强版</li><li><code>LABjs</code>，它的优点是管理依赖关系的能力</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一章主要从管理浏览器中的js代码来进行阐述优化点。&lt;/p&gt;
&lt;h3 id=&quot;优化点1：将脚本放在底部&quot;&gt;&lt;a href=&quot;#优化点1：将脚本放在底部&quot; class=&quot;headerlink&quot; title=&quot;优化点1：将脚本放在底部&quot;&gt;&lt;/a&gt;优化点1：将脚本放在底部&lt;/h3&gt;&lt;p&gt;讲道理，按我们的理解，将js文件和css文件一起放在head中好像没什么毛病，先加载它们，有助于页面渲染和正确交互呀。&lt;/p&gt;
&lt;p&gt;可是！可是坑爹的是，脚本是会阻塞页面渲染的啊，浏览器需要等到它们全部下载并执行完成后，才继续页面渲染。所以把脚本放页面头部会导致明显的延迟，表现为显示空白页面，用户无法浏览页面，也无法与页面进行交互。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://hu33.tech/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://hu33.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="笔记" scheme="http://hu33.tech/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://hu33.tech/tags/JavaScript/"/>
    
      <category term="性能" scheme="http://hu33.tech/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
</feed>
